{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/stock/detail/StockPage.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../../../component/header\";\nimport { TextField, withStyles, CircularProgress } from \"@material-ui/core\";\nimport { findStocksById, saveStock } from \"../../../action/stocks\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"semantic-ui-react\";\nimport styles from \"./styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nexport class StockPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      const {\n        form\n      } = this.state;\n      this.setState({\n        form: { ...form,\n          [name]: value\n        }\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.saveStock(this.state.form);\n      console.log(this.state);\n    };\n\n    this.onItemChange = (event, value) => {\n      const {\n        form\n      } = this.state;\n      this.setState({\n        form: { ...form,\n          item: value\n        }\n      });\n    };\n\n    const {\n      match\n    } = this.props;\n    this.state = {\n      form: {\n        id: match.params.id,\n        item: \"\",\n        quantity: \"\",\n        unit: \"\"\n      },\n      error: false,\n      open: false\n    };\n  }\n\n  onEdit() {\n    this.props.history.push(\"stocks\");\n  }\n\n  componentDidMount() {\n    const {\n      form\n    } = this.state;\n\n    if (form.id) {\n      this.props.findStocksById(form.id);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      saveData,\n      data,\n      error,\n      saveError,\n      history\n    } = this.props;\n\n    if (prevProps.data != data) {\n      this.setState({\n        form: data\n      });\n    } else if (prevProps.saveError !== saveError) {\n      this.setState({\n        error: saveError\n      });\n    } else if (prevProps.error !== error) {\n      this.setState({\n        error: error\n      });\n    } else if (saveData && prevProps.saveData !== saveData) {\n      history.goBack();\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      loading,\n      saveError\n    } = this.props;\n    const {\n      form,\n      error\n    } = this.state;\n    const errorData = (saveError === null || saveError === void 0 ? void 0 : saveError.data) || {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, !loading ? /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, form.id && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"id\",\n      label: \"ID\",\n      value: form.id,\n      name: \"id\",\n      variant: \"filled\",\n      inputProps: {\n        readOnly: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      className: classes.select,\n      id: \"combo-box-demo\",\n      autoHighlight: true,\n      options: itemList,\n      value: form.item.name,\n      onChange: this.onChange,\n      getOptionLabel: (option, value) => option.title,\n      style: {\n        width: 300\n      },\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Item\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 23\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      error: errorData.quantity,\n      helperText: errorData.quantity ? errorData.quantity[0] : null,\n      id: \"quantity\",\n      label: \"Quantity\",\n      value: form.quantity,\n      name: \"quantity\",\n      variant: \"filled\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"combo-box-demo\",\n      options: unitList,\n      value: form.unit.name,\n      onChange: this.onChange,\n      getOptionLabel: option => option.title,\n      style: {\n        width: 300\n      },\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Unit\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 23\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttonContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui orange button\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"save icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }), \"Save\"))) : /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Snackbar, {\n      open: this.state.error,\n      autoHideDuration: 3000,\n      onClose: () => this.setState({\n        error: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: () => this.setState({\n        error: false\n      }),\n      elevation: 6,\n      variant: \"filled\",\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, error === null || error === void 0 ? void 0 : error.message)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.findStocksById.data,\n  loading: state.findStocksById.loading || state.saveStock.loading,\n  error: state.findStocksById.error,\n  saveData: state.saveStock.data,\n  saveError: state.saveStock.error\n});\n\nconst mapDispatchToProps = {\n  findStocksById,\n  saveStock\n};\nconst itemList = [{\n  title: \"Mi Sedaap Soto\"\n}, {\n  title: \"Mie Sedaap Goreng\"\n}, {\n  title: \"Indomie Goreng\"\n}, {\n  title: \"Indomie Goreng\"\n}, {\n  title: \"Indomie Goreng\"\n}];\nconst unitList = [{\n  title: \"Pcs\"\n}, {\n  title: \"Kg\"\n}, {\n  title: \"G\"\n}, {\n  title: \"G\"\n}, {\n  title: \"G\"\n}, {\n  title: \"G\"\n}];\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, mapDispatchToProps)(StockPage));","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/stock/detail/StockPage.js"],"names":["React","Component","Header","TextField","withStyles","CircularProgress","findStocksById","saveStock","connect","Container","styles","Snackbar","Alert","Autocomplete","StockPage","constructor","props","onChange","event","name","value","target","form","state","setState","onSubmit","preventDefault","console","log","onItemChange","item","match","id","params","quantity","unit","error","open","onEdit","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","saveData","data","saveError","goBack","render","classes","loading","errorData","formField","readOnly","select","itemList","option","title","width","unitList","buttonContainer","message","mapStateToProps","mapDispatchToProps","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../../../component/header\";\nimport { TextField, withStyles, CircularProgress } from \"@material-ui/core\";\nimport { findStocksById, saveStock } from \"../../../action/stocks\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"semantic-ui-react\";\nimport styles from \"./styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nexport class StockPage extends Component {\n  constructor(props) {\n    super(props);\n    const { match } = this.props;\n    this.state = {\n      form: {\n        id: match.params.id,\n        item: \"\",\n        quantity: \"\",\n        unit: \"\"\n      },\n      error: false,\n      open: false\n    };\n  }\n  class;\n  onEdit() {\n    this.props.history.push(\"stocks\");\n  }\n\n  componentDidMount() {\n    const { form } = this.state;\n    if (form.id) {\n      this.props.findStocksById(form.id);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { saveData, data, error, saveError, history } = this.props;\n\n    if (prevProps.data != data) {\n      this.setState({ form: data });\n    } else if (prevProps.saveError !== saveError) {\n      this.setState({ error: saveError });\n    } else if (prevProps.error !== error) {\n      this.setState({ error: error });\n    } else if (saveData && prevProps.saveData !== saveData) {\n      history.goBack();\n    }\n  }\n\n  onChange = event => {\n    const { name, value } = event.target;\n    const { form } = this.state;\n    this.setState({ form: { ...form, [name]: value } });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.saveStock(this.state.form);\n    console.log(this.state);\n  };\n\n  onItemChange = (event, value) => {\n    const { form } = this.state;\n    this.setState({ form: { ...form, item: value } });\n  };\n\n  render() {\n    const { classes, loading, saveError } = this.props;\n    const { form, error } = this.state;\n    const errorData = saveError?.data || {};\n    return (\n      <div>\n        <Header>\n          <Container>\n            {!loading ? (\n              <form noValidate autoComplete=\"off\" onSubmit={this.onSubmit}>\n                {form.id && (\n                  <div className={classes.formField}>\n                    <TextField\n                      id=\"id\"\n                      label=\"ID\"\n                      value={form.id}\n                      name=\"id\"\n                      variant=\"filled\"\n                      inputProps={{ readOnly: true }}\n                    />\n                  </div>\n                )}\n                <div className={classes.formField}>\n                  <Autocomplete\n                    className={classes.select}\n                    id=\"combo-box-demo\"\n                    autoHighlight\n                    options={itemList}\n                    value={form.item.name}\n                    onChange={this.onChange}\n                    getOptionLabel={(option, value) => option.title}\n                    style={{ width: 300 }}\n                    renderInput={params => (\n                      <TextField {...params} label=\"Item\" variant=\"outlined\" />\n                    )}\n                  />\n                </div>\n                <div className={classes.formField}>\n                  <TextField\n                    error={errorData.quantity}\n                    helperText={\n                      errorData.quantity ? errorData.quantity[0] : null\n                    }\n                    id=\"quantity\"\n                    label=\"Quantity\"\n                    value={form.quantity}\n                    name=\"quantity\"\n                    variant=\"filled\"\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className={classes.formField}>\n                  <Autocomplete\n                    id=\"combo-box-demo\"\n                    options={unitList}\n                    value={form.unit.name}\n                    onChange={this.onChange}\n                    getOptionLabel={option => option.title}\n                    style={{ width: 300 }}\n                    renderInput={params => (\n                      <TextField {...params} label=\"Unit\" variant=\"outlined\" />\n                    )}\n                  />\n                </div>\n                <div className={classes.buttonContainer}>\n                  <button className=\"ui orange button\" disabled={loading}>\n                    <i className=\"save icon\"></i>\n                    Save\n                  </button>\n                </div>\n              </form>\n            ) : (\n              <CircularProgress />\n            )}\n            <Snackbar\n              open={this.state.error}\n              autoHideDuration={3000}\n              onClose={() => this.setState({ error: false })}\n            >\n              <Alert\n                onClose={() => this.setState({ error: false })}\n                elevation={6}\n                variant=\"filled\"\n                severity=\"error\"\n              >\n                {error?.message}\n              </Alert>\n            </Snackbar>\n          </Container>\n        </Header>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.findStocksById.data,\n  loading: state.findStocksById.loading || state.saveStock.loading,\n  error: state.findStocksById.error,\n  saveData: state.saveStock.data,\n  saveError: state.saveStock.error\n});\n\nconst mapDispatchToProps = {\n  findStocksById,\n  saveStock\n};\n\nconst itemList = [\n  { title: \"Mi Sedaap Soto\" },\n  { title: \"Mie Sedaap Goreng\" },\n  { title: \"Indomie Goreng\" },\n  { title: \"Indomie Goreng\" },\n  { title: \"Indomie Goreng\" }\n];\n\nconst unitList = [\n  { title: \"Pcs\" },\n  { title: \"Kg\" },\n  { title: \"G\" },\n  { title: \"G\" },\n  { title: \"G\" },\n  { title: \"G\" }\n];\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(mapStateToProps, mapDispatchToProps)(StockPage)\n);\n"]},"metadata":{},"sourceType":"module"}