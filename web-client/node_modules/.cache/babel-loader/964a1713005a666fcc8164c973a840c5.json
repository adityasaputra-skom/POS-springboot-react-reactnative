{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/Items/Items.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../../component/Header\";\nimport { Table, Container, Button } from \"reactstrap\";\n$(function () {\n  const tbody = $('table tbody');\n\n  function load() {\n    tbody.empty();\n    fetch('http://localhost:8080/transactions?page=' + ($(\"#page\").val() - 1)).then(response => {\n      if (!response.ok) {\n        // $('#loading').modal('hide');\n        const message = response.statusText;\n        throw new Error(message || 'Unknown Server Error.');\n      }\n\n      return response.json();\n    }).then(jsonResponse => {\n      if (jsonResponse.code != 0) {\n        const message = jsonResponse.message;\n        throw new Error(message || 'Uknown Error (${jsonResponse.code}).');\n      } else if (!jsonResponse.data) {\n        throw new Error('Data is empty');\n      }\n\n      return jsonResponse.data;\n    }).then(data => {\n      const list = data.list;\n      list.forEach(function (value) {\n        let tr = $('<tr>');\n        let a = $('<a>', {\n          href: 'transaction/' + value.id + '.html',\n          text: value.id\n        });\n        tr.append($('<td>').append(a));\n        tr.append($('<td>').text(value.amount));\n        tr.append($('<td>').text(value.type));\n        tr.append($('<td>').text(value.description));\n        tr.append($('<td>').append($('<button>', {\n          'class': 'btn btn-info',\n          text: 'Delete',\n          click: () => remove(value.id)\n        })));\n        tbody.append(tr);\n      }); // $('#loading').modal('hide')\n    }).catch(error => console.log(error.message)).then(() => setTimeout(() => $('#loading').modal('hide'), 500));\n  }\n\n  $('reload-button').click(function () {\n    load();\n  });\n});\n\nclass Items extends Component {\n  render() {\n    const item = [{\n      id: \"1\",\n      name: \"Milk\"\n    }, {\n      id: \"2\",\n      name: \"Matcha\"\n    }, {\n      id: \"3\",\n      name: \"Tea\"\n    }, {\n      id: \"4\",\n      name: \"Coffea\"\n    }];\n\n    const renderItems = (items, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, items.id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, items.name));\n    };\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Items\"), /*#__PURE__*/React.createElement(Table, {\n      className: \"table\",\n      responsive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"NAME\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, item.map(renderItems))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"reload-button\",\n      outline: true,\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Reload\"), \" \"));\n  }\n\n}\n\nexport default Items;","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/Items/Items.js"],"names":["React","Component","Header","Table","Container","Button","$","tbody","load","empty","fetch","val","then","response","ok","message","statusText","Error","json","jsonResponse","code","data","list","forEach","value","tr","a","href","id","text","append","amount","type","description","click","remove","catch","error","console","log","setTimeout","modal","Items","render","item","name","renderItems","items","index","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../../component/Header\";\nimport { Table, Container, Button } from \"reactstrap\";\n\n$(function(){\n  const tbody = $('table tbody');\n\n  function load (){\n    tbody.empty();\n        fetch('http://localhost:8080/transactions?page=' + ($(\"#page\").val() - 1))\n            .then(response => {\n                if (!response.ok) {\n                    // $('#loading').modal('hide');\n                    const message = response.statusText;\n                    throw new Error(message || 'Unknown Server Error.');\n                }\n                return response.json();\n            })\n            .then(jsonResponse => {\n                if (jsonResponse.code != 0) {\n                    const message = jsonResponse.message;\n                    throw new Error(message || 'Uknown Error (${jsonResponse.code}).');\n                } else if (!jsonResponse.data) {\n                    throw new Error('Data is empty');\n                }\n                return jsonResponse.data;\n            })\n            .then(data => {\n                const list = data.list;\n                list.forEach(function (value) {\n                    let tr = $('<tr>');\n                    let a = $('<a>', { href: 'transaction/' + value.id + '.html', text: value.id });\n                    tr.append($('<td>').append(a));\n                    tr.append($('<td>').text(value.amount));\n                    tr.append($('<td>').text(value.type));\n                    tr.append($('<td>').text(value.description));\n                    tr.append($('<td>').append($('<button>', { 'class': 'btn btn-info', text: 'Delete', click: () => remove(value.id) })));\n                    tbody.append(tr);\n                });\n\n                // $('#loading').modal('hide')\n            })\n            .catch(error => console.log(error.message))\n            .then(() => setTimeout(() => $('#loading').modal('hide'), 500));\n    }\n    $('reload-button').click(function(){\n      load();\n    })\n})\nclass Items extends Component {\n  render() {\n    const item = [\n      { id: \"1\", name: \"Milk\" },\n      { id: \"2\", name: \"Matcha\" },\n      { id: \"3\", name: \"Tea\" },\n      { id: \"4\", name: \"Coffea\" }\n    ];\n    const renderItems = (items, index) => {\n      return (\n        <tr>\n          <td>{items.id}</td>\n          <td>{items.name}</td>\n        </tr>\n      );\n    };\n\n    return (\n      <Container>\n        <div>\n          <Header />\n          <h2>Items</h2>\n          <Table className=\"table\" responsive>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n              </tr>\n            </thead>\n            <tbody>{item.map(renderItems)}</tbody>\n          </Table>\n          <hr></hr>\n          <Button className=\"reload-button\" outline color=\"info\">\n            Reload\n          </Button>{\" \"}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Items;\n"]},"metadata":{},"sourceType":"module"}