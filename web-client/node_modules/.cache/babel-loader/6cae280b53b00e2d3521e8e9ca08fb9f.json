{"ast":null,"code":"import { FIND_UNITS, FIND_UNIT_BY_ID } from \"../action/constants\";\nconst data = [{\n  id: 1,\n  name: \"Gram\"\n}, {\n  id: 2,\n  name: \"Pieces\"\n}, {\n  id: 3,\n  name: \"Kilogram\"\n}, {\n  id: 4,\n  name: \"Liter\"\n}, {\n  id: 5,\n  name: \"Kilobyte\"\n}, {\n  id: 6,\n  name: \"Kilobyte\"\n}, {\n  id: 7,\n  name: \"Kilobyte\"\n}];\n\nfunction sleep(delay) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function unitReducers(state, action) {\n  switch (action.type) {\n    case \"FIND_UNIT_BY_ID\":\n      for (const e of data) {\n        if (e.id == action.id) {\n          return e;\n        }\n      }\n\n    case \"FIND_UNITS\":\n      return data;\n  }\n}","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/reducers/units.js"],"names":["FIND_UNITS","FIND_UNIT_BY_ID","data","id","name","sleep","delay","Promise","resolve","setTimeout","unitReducers","state","action","type","e"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,eAArB,QAA4C,qBAA5C;AAEA,MAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADW,EAKX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALW,EASX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CATW,EAaX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAbW,EAiBX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAjBW,EAqBX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CArBW,EAyBX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAzBW,CAAb;;AA+BA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkB;AACnCC,IAAAA,UAAU,CAACD,OAAD,EAAUF,KAAV,CAAV;AACD,GAFM,CAAP;AAGD;;AAED,OAAO,SAASI,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,WAAK,MAAMC,CAAX,IAAgBZ,IAAhB,EAAsB;AACpB,YAAIY,CAAC,CAACX,EAAF,IAAQS,MAAM,CAACT,EAAnB,EAAuB;AACrB,iBAAOW,CAAP;AACD;AACF;;AACH,SAAK,YAAL;AACE,aAAOZ,IAAP;AARJ;AAUD","sourcesContent":["import { FIND_UNITS, FIND_UNIT_BY_ID } from \"../action/constants\";\n\nconst data = [\n  {\n    id: 1,\n    name: \"Gram\"\n  },\n  {\n    id: 2,\n    name: \"Pieces\"\n  },\n  {\n    id: 3,\n    name: \"Kilogram\"\n  },\n  {\n    id: 4,\n    name: \"Liter\"\n  },\n  {\n    id: 5,\n    name: \"Kilobyte\"\n  },\n  {\n    id: 6,\n    name: \"Kilobyte\"\n  },\n  {\n    id: 7,\n    name: \"Kilobyte\"\n  }\n];\n\nfunction sleep(delay) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function unitReducers(state, action) {\n  switch (action.type) {\n    case \"FIND_UNIT_BY_ID\":\n      for (const e of data) {\n        if (e.id == action.id) {\n          return e;\n        }\n      }\n    case \"FIND_UNITS\":\n      return data;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}