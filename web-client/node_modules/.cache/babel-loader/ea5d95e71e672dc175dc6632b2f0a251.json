{"ast":null,"code":"import { FIND_UNIT_REQUEST, FIND_UNIT_SUCCESS, FIND_UNIT_FAILURE, FIND_UNITS_REQUEST, FIND_UNITS_SUCCESS, FIND_UNITS_FAILURE, DELETE_UNIT_REQUEST, DELETE_UNIT_SUCCESS, DELETE_UNIT_FAILURE } from \"./constants\";\nimport { instanceAxios } from \"../utils/apiUtil\";\n\nfunction sleep(delay, value) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay, value);\n  });\n}\n\nexport const add = () => {};\nexport const deletedById = id => dispatch => {\n  dispatch({\n    type: DELETE_UNIT_REQUEST\n  });\n  instanceAxios.delete(`units/${id}`).then(data => sleep(500, data)).then(data => data).then(data => {\n    dispatch(deletedSuccess(data));\n  }).catch(error => {\n    dispatch(deletedUnitFailure(error));\n  });\n};\nexport const findById = id => dispatch => {\n  dispatch({\n    type: FIND_UNIT_REQUEST\n  });\n  instanceAxios.get(`units/${id}`).then(data => sleep(500, data)).then(data => data).then(data => {\n    dispatch(findByIdSucces(data));\n  }).catch(error => {\n    dispatch(findByIdFailure(error));\n  });\n};\nexport const findAll = ({\n  search,\n  sort = \"asc\",\n  page = 0,\n  size = 10\n} = {}) => dispatch => {\n  dispatch({\n    type: FIND_UNITS_REQUEST\n  });\n  instanceAxios.get(`units`, {\n    params: { ...search,\n      sort,\n      page,\n      size\n    }\n  }).then(data => sleep(2000, data)).then(data => data).then(data => {\n    console.log(data);\n    dispatch(findAllSucces(data));\n  }).catch(error => {\n    dispatch(findAllFailure(error));\n  });\n};\n\nfunction findByIdSucces(data) {\n  return {\n    type: FIND_UNIT_SUCCESS,\n    data: data\n  };\n}\n\nfunction findByIdFailure(error) {\n  return {\n    type: FIND_UNIT_FAILURE,\n    error: error\n  };\n}\n\nfunction findAllSucces(data) {\n  return {\n    type: FIND_UNITS_SUCCESS,\n    data: data\n  };\n}\n\nfunction findAllFailure(error) {\n  return {\n    type: FIND_UNITS_FAILURE,\n    error: error\n  };\n}\n\nfunction deletedSuccess(data) {\n  return {\n    type: DELETE_UNIT_SUCCESS,\n    data: data\n  };\n}\n\nfunction deletedUnitFailure(error) {\n  return {\n    type: DELETE_UNIT_FAILURE,\n    error: error\n  };\n}","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/action/units.js"],"names":["FIND_UNIT_REQUEST","FIND_UNIT_SUCCESS","FIND_UNIT_FAILURE","FIND_UNITS_REQUEST","FIND_UNITS_SUCCESS","FIND_UNITS_FAILURE","DELETE_UNIT_REQUEST","DELETE_UNIT_SUCCESS","DELETE_UNIT_FAILURE","instanceAxios","sleep","delay","value","Promise","resolve","setTimeout","add","deletedById","id","dispatch","type","delete","then","data","deletedSuccess","catch","error","deletedUnitFailure","findById","get","findByIdSucces","findByIdFailure","findAll","search","sort","page","size","params","console","log","findAllSucces","findAllFailure"],"mappings":"AAAA,SACEA,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,kBAJF,EAKEC,kBALF,EAMEC,kBANF,EAOEC,mBAPF,EAQEC,mBARF,EASEC,mBATF,QAUO,aAVP;AAWA,SAASC,aAAT,QAA8B,kBAA9B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,KAAtB,EAA6B;AAC3B,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkB;AACnCC,IAAAA,UAAU,CAACD,OAAD,EAAUH,KAAV,EAAiBC,KAAjB,CAAV;AACD,GAFM,CAAP;AAGD;;AAED,OAAO,MAAMI,GAAG,GAAG,MAAM,CAAE,CAApB;AAEP,OAAO,MAAMC,WAAW,GAAGC,EAAE,IAAIC,QAAQ,IAAI;AAC3CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEd;AAAR,GAAD,CAAR;AACAG,EAAAA,aAAa,CACVY,MADH,CACW,SAAQH,EAAG,EADtB,EAEGI,IAFH,CAEQC,IAAI,IAAIb,KAAK,CAAC,GAAD,EAAMa,IAAN,CAFrB,EAGGD,IAHH,CAGQC,IAAI,IAAIA,IAHhB,EAIGD,IAJH,CAIQC,IAAI,IAAI;AACZJ,IAAAA,QAAQ,CAACK,cAAc,CAACD,IAAD,CAAf,CAAR;AACD,GANH,EAOGE,KAPH,CAOSC,KAAK,IAAI;AACdP,IAAAA,QAAQ,CAACQ,kBAAkB,CAACD,KAAD,CAAnB,CAAR;AACD,GATH;AAUD,CAZM;AAcP,OAAO,MAAME,QAAQ,GAAGV,EAAE,IAAIC,QAAQ,IAAI;AACxCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEpB;AAAR,GAAD,CAAR;AACAS,EAAAA,aAAa,CACVoB,GADH,CACQ,SAAQX,EAAG,EADnB,EAEGI,IAFH,CAEQC,IAAI,IAAIb,KAAK,CAAC,GAAD,EAAMa,IAAN,CAFrB,EAGGD,IAHH,CAGQC,IAAI,IAAIA,IAHhB,EAIGD,IAJH,CAIQC,IAAI,IAAI;AACZJ,IAAAA,QAAQ,CAACW,cAAc,CAACP,IAAD,CAAf,CAAR;AACD,GANH,EAOGE,KAPH,CAOSC,KAAK,IAAI;AACdP,IAAAA,QAAQ,CAACY,eAAe,CAACL,KAAD,CAAhB,CAAR;AACD,GATH;AAUD,CAZM;AAcP,OAAO,MAAMM,OAAO,GAAG,CAAC;AACtBC,EAAAA,MADsB;AAEtBC,EAAAA,IAAI,GAAG,KAFe;AAGtBC,EAAAA,IAAI,GAAG,CAHe;AAItBC,EAAAA,IAAI,GAAG;AAJe,IAKpB,EALmB,KAKZjB,QAAQ,IAAI;AACrBA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEjB;AAAR,GAAD,CAAR;AACAM,EAAAA,aAAa,CACVoB,GADH,CACQ,OADR,EACgB;AACZQ,IAAAA,MAAM,EAAE,EAAE,GAAGJ,MAAL;AAAaC,MAAAA,IAAb;AAAmBC,MAAAA,IAAnB;AAAyBC,MAAAA;AAAzB;AADI,GADhB,EAIGd,IAJH,CAIQC,IAAI,IAAIb,KAAK,CAAC,IAAD,EAAOa,IAAP,CAJrB,EAKGD,IALH,CAKQC,IAAI,IAAIA,IALhB,EAMGD,IANH,CAMQC,IAAI,IAAI;AACZe,IAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AAEAJ,IAAAA,QAAQ,CAACqB,aAAa,CAACjB,IAAD,CAAd,CAAR;AACD,GAVH,EAWGE,KAXH,CAWSC,KAAK,IAAI;AACdP,IAAAA,QAAQ,CAACsB,cAAc,CAACf,KAAD,CAAf,CAAR;AACD,GAbH;AAcD,CArBM;;AAuBP,SAASI,cAAT,CAAwBP,IAAxB,EAA8B;AAC5B,SAAO;AACLH,IAAAA,IAAI,EAAEnB,iBADD;AAELsB,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID;;AAED,SAASQ,eAAT,CAAyBL,KAAzB,EAAgC;AAC9B,SAAO;AACLN,IAAAA,IAAI,EAAElB,iBADD;AAELwB,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID;;AACD,SAASc,aAAT,CAAuBjB,IAAvB,EAA6B;AAC3B,SAAO;AACLH,IAAAA,IAAI,EAAEhB,kBADD;AAELmB,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID;;AAED,SAASkB,cAAT,CAAwBf,KAAxB,EAA+B;AAC7B,SAAO;AACLN,IAAAA,IAAI,EAAEf,kBADD;AAELqB,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID;;AAED,SAASF,cAAT,CAAwBD,IAAxB,EAA8B;AAC5B,SAAO;AACLH,IAAAA,IAAI,EAAEb,mBADD;AAELgB,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID;;AAED,SAASI,kBAAT,CAA4BD,KAA5B,EAAmC;AACjC,SAAO;AACLN,IAAAA,IAAI,EAAEZ,mBADD;AAELkB,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID","sourcesContent":["import {\n  FIND_UNIT_REQUEST,\n  FIND_UNIT_SUCCESS,\n  FIND_UNIT_FAILURE,\n  FIND_UNITS_REQUEST,\n  FIND_UNITS_SUCCESS,\n  FIND_UNITS_FAILURE,\n  DELETE_UNIT_REQUEST,\n  DELETE_UNIT_SUCCESS,\n  DELETE_UNIT_FAILURE\n} from \"./constants\";\nimport { instanceAxios } from \"../utils/apiUtil\";\n\nfunction sleep(delay, value) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, delay, value);\n  });\n}\n\nexport const add = () => {};\n\nexport const deletedById = id => dispatch => {\n  dispatch({ type: DELETE_UNIT_REQUEST });\n  instanceAxios\n    .delete(`units/${id}`)\n    .then(data => sleep(500, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(deletedSuccess(data));\n    })\n    .catch(error => {\n      dispatch(deletedUnitFailure(error));\n    });\n};\n\nexport const findById = id => dispatch => {\n  dispatch({ type: FIND_UNIT_REQUEST });\n  instanceAxios\n    .get(`units/${id}`)\n    .then(data => sleep(500, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(findByIdSucces(data));\n    })\n    .catch(error => {\n      dispatch(findByIdFailure(error));\n    });\n};\n\nexport const findAll = ({\n  search,\n  sort = \"asc\",\n  page = 0,\n  size = 10\n} = {}) => dispatch => {\n  dispatch({ type: FIND_UNITS_REQUEST });\n  instanceAxios\n    .get(`units`, {\n      params: { ...search, sort, page, size }\n    })\n    .then(data => sleep(2000, data))\n    .then(data => data)\n    .then(data => {\n      console.log(data);\n      \n      dispatch(findAllSucces(data));\n    })\n    .catch(error => {\n      dispatch(findAllFailure(error));\n    });\n};\n\nfunction findByIdSucces(data) {\n  return {\n    type: FIND_UNIT_SUCCESS,\n    data: data\n  };\n}\n\nfunction findByIdFailure(error) {\n  return {\n    type: FIND_UNIT_FAILURE,\n    error: error\n  };\n}\nfunction findAllSucces(data) {\n  return {\n    type: FIND_UNITS_SUCCESS,\n    data: data\n  };\n}\n\nfunction findAllFailure(error) {\n  return {\n    type: FIND_UNITS_FAILURE,\n    error: error\n  };\n}\n\nfunction deletedSuccess(data) {\n  return {\n    type: DELETE_UNIT_SUCCESS,\n    data: data\n  };\n}\n\nfunction deletedUnitFailure(error) {\n  return {\n    type: DELETE_UNIT_FAILURE,\n    error: error\n  };\n}\n"]},"metadata":{},"sourceType":"module"}