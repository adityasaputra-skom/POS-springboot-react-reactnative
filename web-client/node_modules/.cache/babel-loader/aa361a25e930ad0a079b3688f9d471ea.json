{"ast":null,"code":"const FIND_UNITS = \"FIND_UNITS\";\nconst FIND_UNIT_BY_ID = \"FIND_UNIT_BY_ID\";\nconst data = [{\n  id: 1,\n  name: \"Gram\"\n}, {\n  id: 2,\n  name: \"Pieces\"\n}, {\n  id: 3,\n  name: \"Kilogram\"\n}, {\n  id: 4,\n  name: \"Liter\"\n}, {\n  id: 5,\n  name: \"Kilobyte\"\n}, {\n  id: 6,\n  name: \"Kilobyte\"\n}, {\n  id: 7,\n  name: \"Kilobyte\"\n}];\n\nfunction sleep(delay) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function findById(id) {\n  return {\n    type: FIND_UNIT_BY_ID,\n    id: id\n  };\n}\nexport function findAll() {\n  return {\n    type: FIND_UNITS\n  };\n} // export function findByid(id) {\n//   let parseId = parseInt(id);\n//   for (const e of data) {\n//     console.log(e, parseId, e === parseId);\n//     if (e.id === parseId) {\n//       return e;\n//     }\n//   }\n// }\n// export async function findAll() {\n//   await sleep(3000);\n//   return data;\n// }","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/action/units.js"],"names":["FIND_UNITS","FIND_UNIT_BY_ID","data","id","name","sleep","delay","Promise","resolve","setTimeout","findById","type","findAll"],"mappings":"AAAA,MAAMA,UAAU,GAAG,YAAnB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,MAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADW,EAKX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALW,EASX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CATW,EAaX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAbW,EAiBX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAjBW,EAqBX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CArBW,EAyBX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAzBW,CAAb;;AA+BA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkB;AACnCC,IAAAA,UAAU,CAACD,OAAD,EAAUF,KAAV,CAAV;AACD,GAFM,CAAP;AAGD;;AAED,OAAO,SAASI,QAAT,CAAkBP,EAAlB,EAAsB;AAC3B,SAAO;AACLQ,IAAAA,IAAI,EAAEV,eADD;AAELE,IAAAA,EAAE,EAAEA;AAFC,GAAP;AAID;AAED,OAAO,SAASS,OAAT,GAAmB;AACxB,SAAO;AACLD,IAAAA,IAAI,EAAEX;AADD,GAAP;AAGD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const FIND_UNITS = \"FIND_UNITS\";\nconst FIND_UNIT_BY_ID = \"FIND_UNIT_BY_ID\";\n\nconst data = [\n  {\n    id: 1,\n    name: \"Gram\"\n  },\n  {\n    id: 2,\n    name: \"Pieces\"\n  },\n  {\n    id: 3,\n    name: \"Kilogram\"\n  },\n  {\n    id: 4,\n    name: \"Liter\"\n  },\n  {\n    id: 5,\n    name: \"Kilobyte\"\n  },\n  {\n    id: 6,\n    name: \"Kilobyte\"\n  },\n  {\n    id: 7,\n    name: \"Kilobyte\"\n  }\n];\n\nfunction sleep(delay) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function findById(id) {\n  return {\n    type: FIND_UNIT_BY_ID,\n    id: id\n  };\n}\n\nexport function findAll() {\n  return {\n    type: FIND_UNITS\n  };\n}\n\n// export function findByid(id) {\n//   let parseId = parseInt(id);\n//   for (const e of data) {\n//     console.log(e, parseId, e === parseId);\n\n//     if (e.id === parseId) {\n//       return e;\n//     }\n//   }\n// }\n// export async function findAll() {\n//   await sleep(3000);\n//   return data;\n// }\n"]},"metadata":{},"sourceType":"module"}