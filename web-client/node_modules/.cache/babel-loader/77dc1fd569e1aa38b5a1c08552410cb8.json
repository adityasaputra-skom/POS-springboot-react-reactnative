{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/transaction/summary/MonthSummary.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../../../component/header\";\nimport MUIDataTable from \"mui-datatables\";\nimport { YearSummary } from \"../../../action/transactions\";\nimport { Container } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { CircularProgress, withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\";\n\nclass MonthSummary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onReload = () => {\n      this.reload();\n    };\n\n    this.reload = () => {\n      this.props.YearSummary(this.state.table.search.year);\n    };\n\n    this.onChangeRowsPerPage = numbersOfRow => {\n      const {\n        table\n      } = this.state;\n      this.setState({\n        table: { ...table,\n          size: numbersOfRow\n        }\n      });\n    };\n\n    this.onChangePage = currentPage => {\n      const {\n        table\n      } = this.state;\n      this.setState({\n        table: { ...table,\n          search: {\n            year: currentPage\n          }\n        }\n      });\n    };\n\n    this.onSearchChange = searchText => {\n      const {\n        table\n      } = this.state;\n      this.setState({\n        table: { ...table,\n          search: {\n            year: searchText\n          }\n        }\n      });\n    };\n\n    this.onColumnSortChange = (changedColumn, direction) => {\n      const {\n        table\n      } = this.state;\n      const sort = direction === \"descending\" ? \"desc\" : \"asc\";\n      this.setState({\n        table: { ...table,\n          sort\n        }\n      });\n    };\n\n    this.state = {\n      data: [],\n      total: 0,\n      table: {\n        sort: \"asc\",\n        size: 20,\n        page: 0,\n        search: {\n          year: 2020\n        }\n      },\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      error,\n      data\n    } = this.props;\n\n    if (prevProps.data !== data) {\n      this.setState({\n        data: data === null || data === void 0 ? void 0 : data.entries,\n        total: data === null || data === void 0 ? void 0 : data.total\n      });\n    } else if (error && prevProps.error !== error) {\n      this.setState({\n        error: error\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      loading\n    } = this.props;\n    const {\n      data,\n      total,\n      error,\n      table\n    } = this.state;\n    const columns = [{\n      name: \"entries.year\",\n      label: \"Year\",\n      options: {\n        sort: false\n      }\n    }, {\n      name: \"amount\",\n      label: \"Amount\",\n      options: {\n        sort: false\n      }\n    }, {\n      name: \"type\",\n      label: \"Type\",\n      options: {\n        sort: false\n      }\n    }];\n    const options = {\n      serverSide: true,\n      page: table.page,\n      filter: false,\n      count: total,\n      rowsPerPage: table.size,\n      rowsPerPageOptions: [5, 10, 25, 50, 100],\n      onChangeRowsPerPage: this.onChangeRowsPerPage,\n      onChangePage: this.onChangePage,\n      onSearchChange: this.onSearchChange,\n      onColumnSortChange: this.onColumnSortChange,\n      searchText: table.search.name,\n      selectableRows: \"single\",\n      textLabels: {\n        body: {\n          noMatch: loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }\n          }) : \"Sorry, no matching records found\"\n        }\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        boxSizing: \"content-box\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MUIDataTable, {\n      error: error,\n      title: \"Transaction Summary By Month\",\n      data: !loading ? data : [],\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttonContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui orange button\",\n      href: \"/transactions\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"sync icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }), \"Back\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.findSummaryByYear.data,\n  loading: state.findSummaryByYear.loading,\n  error: state.findSummaryByYear.error\n});\n\nconst mapDispatchToProps = {\n  YearSummary\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, mapDispatchToProps)(MonthSummary));","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/transaction/summary/MonthSummary.js"],"names":["React","Component","Header","MUIDataTable","YearSummary","Container","Link","connect","CircularProgress","withStyles","styles","MonthSummary","constructor","props","onReload","reload","state","table","search","year","onChangeRowsPerPage","numbersOfRow","setState","size","onChangePage","currentPage","onSearchChange","searchText","onColumnSortChange","changedColumn","direction","sort","data","total","page","error","componentDidMount","componentDidUpdate","prevProps","prevState","entries","render","classes","loading","columns","name","label","options","serverSide","filter","count","rowsPerPage","rowsPerPageOptions","selectableRows","textLabels","body","noMatch","boxSizing","buttonContainer","mapStateToProps","findSummaryByYear","mapDispatchToProps","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../../../component/header\";\nimport MUIDataTable from \"mui-datatables\";\nimport { YearSummary } from \"../../../action/transactions\";\nimport { Container } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { CircularProgress, withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\";\nclass MonthSummary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      total: 0,\n      table: {\n        sort: \"asc\",\n        size: 20,\n        page: 0,\n        search: {\n          year: 2020\n        }\n      },\n      error: null\n    };\n  }\n\n  onReload = () => {\n    this.reload();\n  };\n\n  reload = () => {\n    this.props.YearSummary(this.state.table.search.year);\n  };\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  onChangeRowsPerPage = numbersOfRow => {\n    const { table } = this.state;\n    this.setState({ table: { ...table, size: numbersOfRow } });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { error, data } = this.props;\n\n    if (prevProps.data !== data) {\n      this.setState({ data: data?.entries, total: data?.total });\n    } else if (error && prevProps.error !== error) {\n      this.setState({ error: error });\n    }\n  }\n\n  onChangePage = currentPage => {\n    const { table } = this.state;\n    this.setState({ table: { ...table, search: { year: currentPage } } });\n  };\n\n  onSearchChange = searchText => {\n    const { table } = this.state;\n    this.setState({ table: { ...table, search: { year: searchText } } });\n  };\n\n  onColumnSortChange = (changedColumn, direction) => {\n    const { table } = this.state;\n    const sort = direction === \"descending\" ? \"desc\" : \"asc\";\n    this.setState({ table: { ...table, sort } });\n  };\n\n  render() {\n    const { classes, loading } = this.props;\n    const { data, total, error, table } = this.state;\n\n    const columns = [\n      {\n        name: \"entries.year\",\n        label: \"Year\",\n        options: {\n          sort: false\n        }\n      },\n      {\n        name: \"amount\",\n        label: \"Amount\",\n        options: {\n          sort: false\n        }\n      },\n      {\n        name: \"type\",\n        label: \"Type\",\n        options: {\n          sort: false\n        }\n      }\n    ];\n\n    const options = {\n      serverSide: true,\n      page: table.page,\n      filter: false,\n      count: total,\n      rowsPerPage: table.size,\n      rowsPerPageOptions: [5, 10, 25, 50, 100],\n      onChangeRowsPerPage: this.onChangeRowsPerPage,\n      onChangePage: this.onChangePage,\n      onSearchChange: this.onSearchChange,\n      onColumnSortChange: this.onColumnSortChange,\n      searchText: table.search.name,\n      selectableRows: \"single\",\n      textLabels: {\n        body: {\n          noMatch: loading ? (\n            <CircularProgress />\n          ) : (\n            \"Sorry, no matching records found\"\n          )\n        }\n      }\n    };\n\n    return (\n      <div>\n        <Header error={error}>\n          <Container>\n            <div style={{ boxSizing: \"content-box\" }}>\n              <MUIDataTable\n                error={error}\n                title={\"Transaction Summary By Month\"}\n                data={!loading ? data : []}\n                columns={columns}\n                options={options}\n              />\n            </div>\n            <div className={classes.buttonContainer}>\n              <button\n                className=\"ui orange button\"\n                href={\"/transactions\"}\n                disabled={loading}\n              >\n                <i className=\"sync icon\"></i>Back\n              </button>\n            </div>\n          </Container>\n        </Header>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.findSummaryByYear.data,\n  loading: state.findSummaryByYear.loading,\n  error: state.findSummaryByYear.error\n});\n\nconst mapDispatchToProps = {\n  YearSummary\n};\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(mapStateToProps, mapDispatchToProps)(MonthSummary)\n);\n"]},"metadata":{},"sourceType":"module"}