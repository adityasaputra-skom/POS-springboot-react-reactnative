{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/unit/detail/UnitPage.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../../../component/header\";\nimport { TextField, withStyles, CircularProgress } from \"@material-ui/core\";\nimport { findById, editUnitById } from \"../../../action/units\";\nimport { connect } from \"react-redux\";\nimport { Container, Confirm } from \"semantic-ui-react\";\nimport styles from \"./styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nexport class UnitPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonClick = () => this.setState({\n      open: true\n    });\n\n    this.handleConfirm = () => this.setState({\n      open: false\n    });\n\n    this.handleCancel = () => this.setState({\n      open: false\n    });\n\n    this.onChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      console.log(this.state);\n    };\n\n    const {\n      match\n    } = this.props;\n    this.state = {\n      id: match.params.id,\n      name: \"\",\n      error: false,\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.state;\n\n    if (id) {\n      this.props.findById(id);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      data,\n      error\n    } = this.props;\n\n    if (prevProps.data != data) {\n      this.setState({ ...data\n      });\n    } else if (error && prevProps.error !== error) {\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      error,\n      loading\n    } = this.props;\n    const {\n      id,\n      name\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, !loading ? /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, id && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"id\",\n      label: \"ID\",\n      value: id,\n      name: \"id\",\n      variant: \"filled\",\n      inputProps: {\n        readOnly: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"name\",\n      label: \"Name\",\n      value: name,\n      name: \"name\",\n      variant: \"filled\",\n      onChange: this.onChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui orange button\",\n      onClick: this.handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, \"Orange\"), /*#__PURE__*/React.createElement(Confirm, {\n      header: \"This is a large confirm\",\n      open: this.state.open,\n      onCancel: this.handleCancel,\n      onConfirm: this.handleConfirm,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }))) : /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Snackbar, {\n      open: this.state.error,\n      autoHideDuration: 1000,\n      onClose: () => this.setState({\n        error: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: () => this.setState({\n        error: false\n      }),\n      elevation: 6,\n      variant: \"filled\",\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, error === null || error === void 0 ? void 0 : error.message)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.findUnitById.data,\n  loading: state.findUnitById.loading || state.editUnitById.loading,\n  error: state.findUnitById.error,\n  editData: state.editUnitById.data,\n  editError: state.editUnitById.error\n});\n\nconst mapDispatchToProps = {\n  findById,\n  editUnitById\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, mapDispatchToProps)(UnitPage));","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/unit/detail/UnitPage.js"],"names":["React","Component","Header","TextField","withStyles","CircularProgress","findById","editUnitById","connect","Container","Confirm","styles","Snackbar","Alert","UnitPage","constructor","props","handleButtonClick","setState","open","handleConfirm","handleCancel","onChange","event","name","value","target","onSubmit","preventDefault","console","log","state","match","id","params","error","componentDidMount","componentDidUpdate","prevProps","prevState","data","render","classes","loading","formField","readOnly","message","mapStateToProps","findUnitById","editData","editError","mapDispatchToProps","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../../../component/header\";\nimport { TextField, withStyles, CircularProgress } from \"@material-ui/core\";\nimport { findById, editUnitById } from \"../../../action/units\";\nimport { connect } from \"react-redux\";\nimport { Container, Confirm } from \"semantic-ui-react\";\nimport styles from \"./styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport class UnitPage extends Component {\n  constructor(props) {\n    super(props);\n    const { match } = this.props;\n    this.state = {\n      id: match.params.id,\n      name: \"\",\n      error: false,\n      open: false\n    };\n  }\n  handleButtonClick = () => this.setState({ open: true });\n  handleConfirm = () => this.setState({ open: false });\n  handleCancel = () => this.setState({ open: false });\n\n  componentDidMount() {\n    const { id } = this.state;\n    if (id) {\n      this.props.findById(id);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { data, error } = this.props;\n    if (prevProps.data != data) {\n      this.setState({ ...data });\n    } else if (error && prevProps.error !== error) {\n      this.setState({ error: true });\n    }\n  }\n\n  onChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    console.log(this.state);\n  };\n\n  render() {\n    const { classes, error, loading } = this.props;\n    const { id, name } = this.state;\n    return (\n      <div>\n        <Header>\n          <Container>\n            {!loading ? (\n              <form noValidate autoComplete=\"off\" onSubmit={this.onSubmit}>\n                {id && (\n                  <div className={classes.formField}>\n                    <TextField\n                      id=\"id\"\n                      label=\"ID\"\n                      value={id}\n                      name=\"id\"\n                      variant=\"filled\"\n                      inputProps={{ readOnly: true }}\n                    />\n                  </div>\n                )}\n                <div className={classes.formField}>\n                  <TextField\n                    id=\"name\"\n                    label=\"Name\"\n                    value={name}\n                    name=\"name\"\n                    variant=\"filled\"\n                    onChange={this.onChange}\n                    fullWidth\n                  />\n                </div>\n                <div className={classes}>\n                  <button\n                    className=\"ui orange button\"\n                    onClick={this.handleButtonClick}\n                  >\n                    Orange\n                  </button>\n                  <Confirm\n                    header='This is a large confirm'\n                    open={this.state.open}\n                    onCancel={this.handleCancel}\n                    onConfirm={this.handleConfirm}\n                    size='large'\n                  />\n                </div>\n              </form>\n            ) : (\n              <CircularProgress />\n            )}\n            <Snackbar\n              open={this.state.error}\n              autoHideDuration={1000}\n              onClose={() => this.setState({ error: false })}\n            >\n              <Alert\n                onClose={() => this.setState({ error: false })}\n                elevation={6}\n                variant=\"filled\"\n                severity=\"error\"\n              >\n                {error?.message}\n              </Alert>\n            </Snackbar>\n          </Container>\n        </Header>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.findUnitById.data,\n  loading: state.findUnitById.loading || state.editUnitById.loading,\n  error: state.findUnitById.error,\n  editData: state.editUnitById.data,\n  editError: state.editUnitById.error\n});\n\nconst mapDispatchToProps = {\n  findById,\n  editUnitById\n};\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(mapStateToProps, mapDispatchToProps)(UnitPage)\n);\n"]},"metadata":{},"sourceType":"module"}