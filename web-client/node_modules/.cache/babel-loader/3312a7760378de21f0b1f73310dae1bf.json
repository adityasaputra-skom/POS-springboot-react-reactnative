{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/stock/detail/StockPage.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../../../component/header\";\nimport { TextField, withStyles, CircularProgress } from \"@material-ui/core\";\nimport { findStocksById, saveStock } from \"../../../action/stocks\";\nimport { findAll as findItems } from \"../../../action/items\";\nimport { findAll as findUnits } from \"../../../action/units\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"semantic-ui-react\";\nimport styles from \"./styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nexport class StockPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      const {\n        form\n      } = this.state;\n      this.setState({\n        form: { ...form,\n          [name]: value\n        }\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.saveStock(this.state.form);\n      console.log(this.state);\n    };\n\n    this.onItemChange = (event, value) => {\n      const {\n        form\n      } = this.state;\n      this.setState({\n        form: { ...form,\n          item: value\n        }\n      });\n    };\n\n    this.onItemOpen = event => {\n      this.props.findItems();\n    };\n\n    this.onItemTextChange = event => {\n      const {\n        value\n      } = event.target;\n\n      if (value) {\n        this.props.findItems({\n          search: {\n            name: value\n          }\n        });\n      } else {\n        this.setState({\n          itemOptions: []\n        });\n      }\n    };\n\n    this.onUnitChange = (event, value) => {\n      const {\n        form\n      } = this.state;\n      this.setState({\n        form: { ...form,\n          unit: value\n        }\n      });\n    };\n\n    this.onUnitOpen = event => {\n      this.props.findUnits();\n    };\n\n    this.onItemTextChange = event => {\n      const {\n        value\n      } = event.target;\n\n      if (value) {\n        this.props.findItems({\n          search: {\n            name: value\n          }\n        });\n      } else {\n        this.setState({\n          unitOptions: []\n        });\n      }\n    };\n\n    const {\n      match\n    } = this.props;\n    this.state = {\n      form: {\n        id: match.params.id,\n        item: \"\",\n        quantity: \"\",\n        unit: \"\"\n      },\n      itemOptions: [],\n      unitOptions: [],\n      open: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      form\n    } = this.state;\n\n    if (form.id) {\n      this.props.findStocksById(form.id);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      saveData,\n      data,\n      error,\n      saveError,\n      history,\n      itemsData\n    } = this.props;\n\n    if (prevProps.itemsData !== itemsData) {\n      this.setState({\n        itemOptions: itemsData === null || itemsData === void 0 ? void 0 : itemsData.list\n      });\n    } else if (prevProps.data != data) {\n      this.setState({\n        form: data\n      });\n    } else if (prevProps.saveError !== saveError) {\n      this.setState({\n        error: saveError\n      });\n    } else if (prevProps.error !== error) {\n      this.setState({\n        error: error\n      });\n    } else if (saveData && prevProps.saveData !== saveData) {\n      this.props.history.push(\"/stocks\");\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      loading,\n      saveError,\n      itemsLoading,\n      itemsData,\n      unitsLoading,\n      unitsData\n    } = this.props;\n    const {\n      form,\n      error\n    } = this.state;\n    const unitOptions = !unitsLoading && unitsData ? unitsData.list : [];\n    const itemOptions = !itemsLoading && itemsData ? itemsData.list : [];\n    const errorData = (saveError === null || saveError === void 0 ? void 0 : saveError.data) || {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, !loading ? /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, form.id && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"id\",\n      label: \"ID\",\n      value: form.id,\n      name: \"id\",\n      variant: \"filled\",\n      fullWidth: true,\n      inputProps: {\n        readOnly: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"combo-box-demo\",\n      className: classes.select,\n      fullWidth: true,\n      autoHighlight: true,\n      options: !itemsLoading ? itemOptions : [],\n      loading: itemsLoading,\n      value: form.item,\n      onOpen: this.onItemOpen,\n      onChange: this.onItemChange,\n      getOptionSelected: (option, value) => option.id == value.id,\n      getOptionLabel: option => option.name,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Item\",\n        disabled: itemsLoading,\n        variant: \"outlined\",\n        onChange: this.onItemTextChange,\n        inputProps: { ...params.inputProps,\n          autoComplete: \"new-password\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 23\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      error: errorData.quantity,\n      helperText: errorData.quantity ? errorData.quantity[0] : null,\n      id: \"quantity\",\n      label: \"Quantity\",\n      value: form.quantity,\n      name: \"quantity\",\n      variant: \"filled\",\n      onChange: this.onChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"combo-box-demo\",\n      options: unitList,\n      value: form.unit.name,\n      onChange: this.onChange,\n      getOptionSelected: (option, value) => option.id == value.id,\n      getOptionLabel: option => option.name,\n      fullWidth: true,\n      loading: itemsLoading,\n      onOpen: this.onUnitOpen,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Unit\",\n        variant: \"outlined\",\n        onChange: this.onUnitTextChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 23\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttonContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui orange button\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"save icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }), \"Save\"))) : /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Snackbar, {\n      open: this.state.error,\n      autoHideDuration: 3000,\n      onClose: () => this.setState({\n        error: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: () => this.setState({\n        error: false\n      }),\n      elevation: 6,\n      variant: \"filled\",\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, error === null || error === void 0 ? void 0 : error.message)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.findStocksById.data,\n  loading: state.findStocksById.loading || state.saveStock.loading,\n  error: state.findStocksById.error,\n  saveData: state.saveStock.data,\n  saveError: state.saveStock.error,\n  itemsData: state.findItems.data,\n  itemsLoading: state.findItems.loading,\n  itemsError: state.findItems.error,\n  unitsData: state.findUnits.data,\n  unitsLoading: state.findUnits.loading,\n  unitsError: state.findUnits.error\n});\n\nconst unitList = [{\n  id: 1,\n  name: \"Pcs\",\n  description: \"Pieces\"\n}, {\n  id: 2,\n  name: \"Pcs\",\n  description: \"Pieces\"\n}];\nconst mapDispatchToProps = {\n  findStocksById,\n  saveStock,\n  findItems,\n  findUnits\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, mapDispatchToProps)(StockPage));","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/stock/detail/StockPage.js"],"names":["React","Component","Header","TextField","withStyles","CircularProgress","findStocksById","saveStock","findAll","findItems","findUnits","connect","Container","styles","Snackbar","Alert","Autocomplete","StockPage","constructor","props","onChange","event","name","value","target","form","state","setState","onSubmit","preventDefault","console","log","onItemChange","item","onItemOpen","onItemTextChange","search","itemOptions","onUnitChange","unit","onUnitOpen","unitOptions","match","id","params","quantity","open","error","componentDidMount","componentDidUpdate","prevProps","prevState","saveData","data","saveError","history","itemsData","list","push","render","classes","loading","itemsLoading","unitsLoading","unitsData","errorData","formField","readOnly","select","option","inputProps","autoComplete","unitList","onUnitTextChange","buttonContainer","message","mapStateToProps","itemsError","unitsError","description","mapDispatchToProps","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../../../component/header\";\nimport { TextField, withStyles, CircularProgress } from \"@material-ui/core\";\nimport { findStocksById, saveStock } from \"../../../action/stocks\";\nimport { findAll as findItems } from \"../../../action/items\";\nimport { findAll as findUnits } from \"../../../action/units\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"semantic-ui-react\";\nimport styles from \"./styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nexport class StockPage extends Component {\n  constructor(props) {\n    super(props);\n    const { match } = this.props;\n    this.state = {\n      form: {\n        id: match.params.id,\n        item: \"\",\n        quantity: \"\",\n        unit: \"\"\n      },\n      itemOptions: [],\n      unitOptions: [],\n      open: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    const { form } = this.state;\n    if (form.id) {\n      this.props.findStocksById(form.id);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { saveData, data, error, saveError, history, itemsData } = this.props;\n\n    if (prevProps.itemsData !== itemsData) {\n      this.setState({ itemOptions: itemsData?.list });\n    } else if (prevProps.data != data) {\n      this.setState({ form: data });\n    } else if (prevProps.saveError !== saveError) {\n      this.setState({ error: saveError });\n    } else if (prevProps.error !== error) {\n      this.setState({ error: error });\n    } else if (saveData && prevProps.saveData !== saveData) {\n      this.props.history.push(\"/stocks\");\n    }\n  }\n\n  onChange = event => {\n    const { name, value } = event.target;\n    const { form } = this.state;\n    this.setState({ form: { ...form, [name]: value } });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.saveStock(this.state.form);\n    console.log(this.state);\n  };\n\n  onItemChange = (event, value) => {\n    const { form } = this.state;\n    this.setState({ form: { ...form, item: value } });\n  };\n\n  onItemOpen = event => {\n    this.props.findItems();\n  };\n\n  onItemTextChange = event => {\n    const { value } = event.target;\n    if (value) {\n      this.props.findItems({ search: { name: value } });\n    } else {\n      this.setState({ itemOptions: [] });\n    }\n  };\n\n  onUnitChange = (event, value) => {\n    const { form } = this.state;\n    this.setState({ form: { ...form, unit: value } });\n  };\n\n  onUnitOpen = event => {\n    this.props.findUnits();\n  };\n\n  onItemTextChange = event => {\n    const { value } = event.target;\n    if (value) {\n      this.props.findItems({ search: { name: value } });\n    } else {\n      this.setState({ unitOptions: [] });\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      loading,\n      saveError,\n      itemsLoading,\n      itemsData,\n      unitsLoading,\n      unitsData\n    } = this.props;\n    const { form, error } = this.state;\n    const unitOptions = !unitsLoading && unitsData ? unitsData.list : [];\n    const itemOptions = !itemsLoading && itemsData ? itemsData.list : [];\n    const errorData = saveError?.data || {};\n    return (\n      <div>\n        <Header error={error}>\n          <Container>\n            {!loading ? (\n              <form noValidate autoComplete=\"off\" onSubmit={this.onSubmit}>\n                {form.id && (\n                  <div className={classes.formField}>\n                    <TextField\n                      id=\"id\"\n                      label=\"ID\"\n                      value={form.id}\n                      name=\"id\"\n                      variant=\"filled\"\n                      fullWidth\n                      inputProps={{ readOnly: true }}\n                    />\n                  </div>\n                )}\n                <div className={classes.formField}>\n                  <Autocomplete\n                    id=\"combo-box-demo\"\n                    className={classes.select}\n                    fullWidth\n                    autoHighlight\n                    options={!itemsLoading ? itemOptions : []}\n                    loading={itemsLoading}\n                    value={form.item}\n                    onOpen={this.onItemOpen}\n                    onChange={this.onItemChange}\n                    getOptionSelected={(option, value) => option.id == value.id}\n                    getOptionLabel={option => option.name}\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Item\"\n                        disabled={itemsLoading}\n                        variant=\"outlined\"\n                        onChange={this.onItemTextChange}\n                        inputProps={{\n                          ...params.inputProps,\n                          autoComplete: \"new-password\"\n                        }}\n                      />\n                    )}\n                  />\n                </div>\n                <div className={classes.formField}>\n                  <TextField\n                    error={errorData.quantity}\n                    helperText={\n                      errorData.quantity ? errorData.quantity[0] : null\n                    }\n                    id=\"quantity\"\n                    label=\"Quantity\"\n                    value={form.quantity}\n                    name=\"quantity\"\n                    variant=\"filled\"\n                    onChange={this.onChange}\n                    fullWidth\n                  />\n                </div>\n                <div className={classes.formField}>\n                  <Autocomplete\n                    id=\"combo-box-demo\"\n                    options={unitList}\n                    value={form.unit.name}\n                    onChange={this.onChange}\n                    getOptionSelected={(option, value) => option.id == value.id}\n                    getOptionLabel={option => option.name}\n                    fullWidth\n                    loading={itemsLoading}\n                    onOpen={this.onUnitOpen}\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Unit\"\n                        variant=\"outlined\"\n                        onChange={this.onUnitTextChange}\n                      />\n                    )}\n                  />\n                </div>\n                <div className={classes.buttonContainer}>\n                  <button className=\"ui orange button\" disabled={loading}>\n                    <i className=\"save icon\"></i>\n                    Save\n                  </button>\n                </div>\n              </form>\n            ) : (\n              <CircularProgress />\n            )}\n            <Snackbar\n              open={this.state.error}\n              autoHideDuration={3000}\n              onClose={() => this.setState({ error: false })}\n            >\n              <Alert\n                onClose={() => this.setState({ error: false })}\n                elevation={6}\n                variant=\"filled\"\n                severity=\"error\"\n              >\n                {error?.message}\n              </Alert>\n            </Snackbar>\n          </Container>\n        </Header>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.findStocksById.data,\n  loading: state.findStocksById.loading || state.saveStock.loading,\n  error: state.findStocksById.error,\n  saveData: state.saveStock.data,\n  saveError: state.saveStock.error,\n  itemsData: state.findItems.data,\n  itemsLoading: state.findItems.loading,\n  itemsError: state.findItems.error,\n  unitsData: state.findUnits.data,\n  unitsLoading: state.findUnits.loading,\n  unitsError: state.findUnits.error\n});\n\nconst unitList = [\n  {\n    id: 1,\n    name: \"Pcs\",\n    description: \"Pieces\"\n  },\n  {\n    id: 2,\n    name: \"Pcs\",\n    description: \"Pieces\"\n  }\n];\nconst mapDispatchToProps = {\n  findStocksById,\n  saveStock,\n  findItems,\n  findUnits\n};\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(mapStateToProps, mapDispatchToProps)(StockPage)\n);\n"]},"metadata":{},"sourceType":"module"}