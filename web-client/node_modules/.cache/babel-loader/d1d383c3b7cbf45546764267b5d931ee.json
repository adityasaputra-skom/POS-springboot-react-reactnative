{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/home/Chart.js\";\nimport React, { Component } from \"react\";\nimport { YearSummary } from \"../../action/transactions\";\nimport { connect } from \"react-redux\";\nimport ZingChart from \"zingchart-react\";\nimport { Button } from \"semantic-ui-react\";\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onReload = () => {\n      this.reload();\n    };\n\n    this.reload = () => {\n      this.props.YearSummary(2020);\n    };\n\n    this.state = {\n      config: {\n        type: \"bar\",\n        \"scale-x\": {\n          values: []\n        },\n        series: [{\n          values: []\n        }]\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      error,\n      data\n    } = this.props;\n\n    if (prevProps.data !== data) {\n      var _this$props$data, _this$props$data2;\n\n      this.setState({ ...this.state,\n        config: { ...this.state.config,\n          \"scale-x\": { ...this.state.config[\"scale-x\"],\n            values: (_this$props$data = this.props.data) === null || _this$props$data === void 0 ? void 0 : _this$props$data.entries.map(entry => entry.type)\n          },\n          series: { ...this.state.config.series,\n            values: (_this$props$data2 = this.props.data) === null || _this$props$data2 === void 0 ? void 0 : _this$props$data2.entries.map(entry => entry.amount)\n          }\n        },\n        data: data === null || data === void 0 ? void 0 : data.entries\n      });\n    } else if (error && prevProps.error !== error) {\n      this.setState({\n        error: error\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => console.log(this.state),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"K\"), /*#__PURE__*/React.createElement(ZingChart, {\n      data: this.state.config,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.findSummaryByYear.data,\n  loading: state.findSummaryByYear.loading,\n  error: state.findSummaryByYear.error\n});\n\nconst mapDispatchToProps = {\n  YearSummary\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/home/Chart.js"],"names":["React","Component","YearSummary","connect","ZingChart","Button","Chart","constructor","props","onReload","reload","state","config","type","values","series","componentDidUpdate","prevProps","prevState","error","data","setState","entries","map","entry","amount","componentDidMount","render","console","log","mapStateToProps","findSummaryByYear","loading","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { YearSummary } from \"../../action/transactions\";\nimport { connect } from \"react-redux\";\nimport ZingChart from \"zingchart-react\";\nimport { Button } from \"semantic-ui-react\";\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: {\n        type: \"bar\",\n        \"scale-x\": {\n          values: []\n        },\n        series: [\n          {\n            values: []\n          }\n        ]\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { error, data } = this.props;\n\n    if (prevProps.data !== data) {\n      this.setState({\n        ...this.state,\n        config: {\n          ...this.state.config,\n          \"scale-x\": {\n            ...this.state.config[\"scale-x\"],\n            values: this.props.data?.entries.map(entry => entry.type)\n          },\n          series: {\n            ...this.state.config.series,\n            values: this.props.data?.entries.map(entry => entry.amount)\n          }\n        },\n        data: data?.entries\n      });\n    } else if (error && prevProps.error !== error) {\n      this.setState({ error: error });\n    }\n  }\n\n  onReload = () => {\n    this.reload();\n  };\n\n  reload = () => {\n    this.props.YearSummary(2020);\n  };\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  render() {\n    return (\n      <div>\n        <Button onClick={() => console.log(this.state)}>K</Button>\n        <ZingChart data={this.state.config} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.findSummaryByYear.data,\n  loading: state.findSummaryByYear.loading,\n  error: state.findSummaryByYear.error\n});\n\nconst mapDispatchToProps = {\n  YearSummary\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);\n"]},"metadata":{},"sourceType":"module"}