{"ast":null,"code":"import { FIND_UNIT_REQUEST, FIND_UNIT_SUCCESS, FIND_UNIT_FAILURE, FIND_UNITS_REQUEST, FIND_UNITS_SUCCESS, FIND_UNITS_FAILURE, DELETE_UNIT_REQUEST, DELETE_UNIT_SUCCESS, DELETE_UNIT_FAILURE, SAVE_UNIT_FAILURE, SAVE_UNIT_REQUEST, SAVE_UNIT_SUCCESS, ADD_UNIT_FAILURE, ADD_UNIT_REQUEST, ADD_UNIT_SUCCESS } from \"./constants\";\nimport { instanceAxios } from \"../utils/apiUtil\";\n\nfunction sleep(delay, value) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay, value);\n  });\n}\n\nexport const addUnits = id => dispatch => {\n  dispatch({\n    type: ADD_UNIT_REQUEST\n  });\n  instanceAxios.post(`units/${id}`).then(data => sleep(500, data)).then(data => data).then(data => {\n    dispatch(addSuccess(data));\n  }).catch(error => {\n    dispatch(addFailure(error));\n  });\n};\nexport const deletedById = id => dispatch => {\n  dispatch({\n    type: DELETE_UNIT_REQUEST\n  });\n  instanceAxios.delete(`units/${id}`).then(data => sleep(500, data)).then(data => data).then(data => {\n    dispatch(deletedSuccess(data));\n  }).catch(error => {\n    dispatch(deletedUnitFailure(error));\n  });\n};\nexport const editUnitById = ({\n  id,\n  name\n}) => dispatch => {\n  dispatch({\n    type: EDIT_UNIT_REQUEST\n  });\n  const request = id ? instanceAxios.put(`units/${id}`, {\n    id,\n    name\n  }) : instanceAxios.post(`units`, {\n    name\n  });\n  request.then(data => sleep(500, data)).then(data => data).then(data => {\n    dispatch(editSuccess(data));\n  }).catch(error => {\n    dispatch(editFailure(error));\n  });\n};\nexport const findById = id => dispatch => {\n  dispatch({\n    type: FIND_UNIT_REQUEST\n  });\n  instanceAxios.get(`units/${id}`).then(data => sleep(500, data)).then(data => data).then(data => {\n    dispatch(findByIdSucces(data));\n  }).catch(error => {\n    dispatch(findByIdFailure(error));\n  });\n};\nexport const findAll = ({\n  search,\n  sort = \"asc\",\n  page = 0,\n  size = 10\n} = {}) => dispatch => {\n  dispatch({\n    type: FIND_UNITS_REQUEST\n  });\n  instanceAxios.get(`units`, {\n    params: { ...search,\n      sort,\n      page,\n      size\n    }\n  }).then(data => sleep(2000, data)).then(data => data).then(data => {\n    dispatch(findAllSucces(data));\n  }).catch(error => {\n    dispatch(findAllFailure(error));\n  });\n};\n\nfunction findByIdSucces(data) {\n  return {\n    type: FIND_UNIT_SUCCESS,\n    data: data\n  };\n}\n\nfunction findByIdFailure(error) {\n  return {\n    type: FIND_UNIT_FAILURE,\n    error: error\n  };\n}\n\nfunction findAllSucces(data) {\n  return {\n    type: FIND_UNITS_SUCCESS,\n    data: data\n  };\n}\n\nfunction findAllFailure(error) {\n  return {\n    type: FIND_UNITS_FAILURE,\n    error: error\n  };\n}\n\nfunction deletedSuccess(data) {\n  return {\n    type: DELETE_UNIT_SUCCESS,\n    data: data\n  };\n}\n\nfunction deletedUnitFailure(error) {\n  return {\n    type: DELETE_UNIT_FAILURE,\n    error: error\n  };\n}\n\nfunction editFailure(error) {\n  return {\n    type: EDIT_UNIT_FAILURE,\n    error: error\n  };\n}\n\nfunction editSuccess(data) {\n  return {\n    type: EDIT_UNIT_SUCCESS,\n    data: data\n  };\n}\n\nfunction addFailure(error) {\n  return {\n    type: ADD_UNIT_FAILURE,\n    error: error\n  };\n}\n\nfunction addSuccess(data) {\n  return {\n    type: ADD_UNIT_SUCCESS,\n    data: data\n  };\n}","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/action/units.js"],"names":["FIND_UNIT_REQUEST","FIND_UNIT_SUCCESS","FIND_UNIT_FAILURE","FIND_UNITS_REQUEST","FIND_UNITS_SUCCESS","FIND_UNITS_FAILURE","DELETE_UNIT_REQUEST","DELETE_UNIT_SUCCESS","DELETE_UNIT_FAILURE","SAVE_UNIT_FAILURE","SAVE_UNIT_REQUEST","SAVE_UNIT_SUCCESS","ADD_UNIT_FAILURE","ADD_UNIT_REQUEST","ADD_UNIT_SUCCESS","instanceAxios","sleep","delay","value","Promise","resolve","setTimeout","addUnits","id","dispatch","type","post","then","data","addSuccess","catch","error","addFailure","deletedById","delete","deletedSuccess","deletedUnitFailure","editUnitById","name","EDIT_UNIT_REQUEST","request","put","editSuccess","editFailure","findById","get","findByIdSucces","findByIdFailure","findAll","search","sort","page","size","params","findAllSucces","findAllFailure","EDIT_UNIT_FAILURE","EDIT_UNIT_SUCCESS"],"mappings":"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","sourcesContent":["import {\n  FIND_UNIT_REQUEST,\n  FIND_UNIT_SUCCESS,\n  FIND_UNIT_FAILURE,\n  FIND_UNITS_REQUEST,\n  FIND_UNITS_SUCCESS,\n  FIND_UNITS_FAILURE,\n  DELETE_UNIT_REQUEST,\n  DELETE_UNIT_SUCCESS,\n  DELETE_UNIT_FAILURE,\n  SAVE_UNIT_FAILURE,\n  SAVE_UNIT_REQUEST,\n  SAVE_UNIT_SUCCESS,\n  ADD_UNIT_FAILURE,\n  ADD_UNIT_REQUEST,\n  ADD_UNIT_SUCCESS\n} from \"./constants\";\nimport { instanceAxios } from \"../utils/apiUtil\";\n\nfunction sleep(delay, value) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, delay, value);\n  });\n}\n\nexport const addUnits = id => dispatch => {\n  dispatch({ type: ADD_UNIT_REQUEST });\n  instanceAxios\n    .post(`units/${id}`)\n    .then(data => sleep(500, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(addSuccess(data));\n    })\n    .catch(error => {\n      dispatch(addFailure(error));\n    });\n};\nexport const deletedById = id => dispatch => {\n  dispatch({ type: DELETE_UNIT_REQUEST });\n  instanceAxios\n    .delete(`units/${id}`)\n    .then(data => sleep(500, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(deletedSuccess(data));\n    })\n    .catch(error => {\n      dispatch(deletedUnitFailure(error));\n    });\n};\n\nexport const editUnitById = ({ id, name }) => dispatch => {\n  dispatch({ type: EDIT_UNIT_REQUEST });\n\n  const request = id\n    ? instanceAxios.put(`units/${id}`, { id, name })\n    : instanceAxios.post(`units`, { name });\n  request\n    .then(data => sleep(500, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(editSuccess(data));\n    })\n    .catch(error => {\n      dispatch(editFailure(error));\n    });\n};\n\nexport const findById = id => dispatch => {\n  dispatch({ type: FIND_UNIT_REQUEST });\n  instanceAxios\n    .get(`units/${id}`)\n    .then(data => sleep(500, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(findByIdSucces(data));\n    })\n    .catch(error => {\n      dispatch(findByIdFailure(error));\n    });\n};\n\nexport const findAll = ({\n  search,\n  sort = \"asc\",\n  page = 0,\n  size = 10\n} = {}) => dispatch => {\n  dispatch({ type: FIND_UNITS_REQUEST });\n  instanceAxios\n    .get(`units`, {\n      params: { ...search, sort, page, size }\n    })\n    .then(data => sleep(2000, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(findAllSucces(data));\n    })\n    .catch(error => {\n      dispatch(findAllFailure(error));\n    });\n};\n\nfunction findByIdSucces(data) {\n  return {\n    type: FIND_UNIT_SUCCESS,\n    data: data\n  };\n}\n\nfunction findByIdFailure(error) {\n  return {\n    type: FIND_UNIT_FAILURE,\n    error: error\n  };\n}\nfunction findAllSucces(data) {\n  return {\n    type: FIND_UNITS_SUCCESS,\n    data: data\n  };\n}\n\nfunction findAllFailure(error) {\n  return {\n    type: FIND_UNITS_FAILURE,\n    error: error\n  };\n}\n\nfunction deletedSuccess(data) {\n  return {\n    type: DELETE_UNIT_SUCCESS,\n    data: data\n  };\n}\n\nfunction deletedUnitFailure(error) {\n  return {\n    type: DELETE_UNIT_FAILURE,\n    error: error\n  };\n}\n\nfunction editFailure(error) {\n  return {\n    type: EDIT_UNIT_FAILURE,\n    error: error\n  };\n}\n\nfunction editSuccess(data) {\n  return {\n    type: EDIT_UNIT_SUCCESS,\n    data: data\n  };\n}\n\nfunction addFailure(error) {\n  return {\n    type: ADD_UNIT_FAILURE,\n    error: error\n  };\n}\n\nfunction addSuccess(data) {\n  return {\n    type: ADD_UNIT_SUCCESS,\n    data: data\n  };\n}\n"]},"metadata":{},"sourceType":"module"}