{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/unit/UnitPageList.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../../component/header\";\nimport MUIDataTable from \"mui-datatables\";\nimport { findAll, deletedById } from \"../../action/units\";\nimport { Container } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { CircularProgress } from \"@material-ui/core\";\nconst options = {};\n\nclass UnitPageList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onReload = () => {\n      this.props.findAll(this.state);\n    };\n\n    this.onAdd = () => {\n      this.props.history.push(\"units/add\");\n    };\n\n    this.onRowClick = rowData => {\n      this.props.history.push(`/units/${rowData[0]}`);\n    };\n\n    this.onChangeRowsPerPage = numbersOfRow => {\n      this.setState({\n        size: numbersOfRow\n      });\n    };\n\n    this.onChangePage = currentPage => {\n      this.setState({\n        page: currentPage\n      });\n    };\n\n    this.onSearchChange = serachText => {\n      this.setState({\n        search: {\n          name: serachText\n        }\n      });\n    };\n\n    this.onColumnSortChange = (changedColumn, direction) => {\n      this.setState({\n        sort: direction == \"descending\" ? \"desc\" : \"asc\"\n      });\n    };\n\n    this.onRowsDelete = rowsDeleted => {\n      const {\n        list\n      } = this.props.data;\n      const e = list[rowsDeleted.data[0].index];\n      this.props.deletedById(e.id);\n      console.log(\"id : \", e.id);\n    };\n\n    this.state = {\n      params: {\n        search: {},\n        sort: \"asc\",\n        size: 5,\n        page: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.onReload();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      deleteData\n    } = this.props;\n\n    if (prevState !== this.state || prevProps.deleteData !== deleteData) {\n      this.onReload();\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      data,\n      loading\n    } = this.props;\n    const dataList = !loading && data ? data.list : [];\n    console.log(data);\n    const columns = [{\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        sortDirection: this.state.sort\n      }\n    }, {\n      name: \"name\",\n      label: \"Name\",\n      options: {\n        sort: false\n      }\n    }, {\n      name: \"description\",\n      label: \"Description\",\n      options: {\n        sort: false\n      }\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onAdd,\n      className: classes,\n      className: \"ui orange button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"plus square outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }), \"New Unit\")), /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"Units List\",\n      data: dataList,\n      columns: columns,\n      options: {\n        serverSide: true,\n        page: this.state.page,\n        filter: false,\n        count: data === null || data === void 0 ? void 0 : data.total,\n        onRowsDelete: this.onRowsDelete,\n        onRowClick: this.onRowClick,\n        rowsPerPage: this.state.size,\n        rowsPerPageOptions: [1, 2, 3, 5, 10],\n        onChangeRowsPerPage: this.onChangeRowsPerPage,\n        onChangePage: this.onChangePage,\n        onSearchChange: this.onSearchChange,\n        onColumnSortChange: this.onColumnSortChange,\n        searchText: this.state.search.name,\n        selectableRows: \"single\",\n        onRowsDelete: this.onRowsDelete,\n        textLabels: {\n          body: {\n            noMatch: loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 23\n              }\n            }) : \"Sorry, no matching records found\"\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui orange button\",\n      onClick: this.onReload,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"sync icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }), \"Reload\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  deleteData: state.deletedById.data,\n  data: state.findUnits.data,\n  loading: state.findUnits.loading || state.deletedById.loading,\n  error: state.findUnits.error || state.deletedById.error\n});\n\nconst mapDispatchToProps = {\n  findAll,\n  deletedById\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UnitPageList);","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/unit/UnitPageList.js"],"names":["React","Component","Header","MUIDataTable","findAll","deletedById","Container","connect","CircularProgress","options","UnitPageList","constructor","props","onReload","state","onAdd","history","push","onRowClick","rowData","onChangeRowsPerPage","numbersOfRow","setState","size","onChangePage","currentPage","page","onSearchChange","serachText","search","name","onColumnSortChange","changedColumn","direction","sort","onRowsDelete","rowsDeleted","list","data","e","index","id","console","log","params","componentDidMount","componentDidUpdate","prevProps","prevState","deleteData","render","classes","loading","dataList","columns","label","sortDirection","serverSide","filter","count","total","rowsPerPage","rowsPerPageOptions","searchText","selectableRows","textLabels","body","noMatch","mapStateToProps","findUnits","error","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../../component/header\";\nimport MUIDataTable from \"mui-datatables\";\nimport { findAll, deletedById } from \"../../action/units\";\nimport { Container } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst options = {};\n\nclass UnitPageList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      params: {\n        search: {},\n        sort: \"asc\",\n        size: 5,\n        page: 0\n      }\n    };\n  }\n\n  onReload = () => {\n    this.props.findAll(this.state);\n  };\n\n  onAdd = () => {\n    this.props.history.push(\"units/add\");\n  };\n\n  onRowClick = rowData => {\n    this.props.history.push(`/units/${rowData[0]}`);\n  };\n  componentDidMount() {\n    this.onReload();\n  }\n\n  onChangeRowsPerPage = numbersOfRow => {\n    this.setState({ size: numbersOfRow });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { deleteData } = this.props;\n    if (prevState !== this.state || prevProps.deleteData !== deleteData) {\n      this.onReload();\n    }\n  }\n\n  onChangePage = currentPage => {\n    this.setState({ page: currentPage });\n  };\n\n  onSearchChange = serachText => {\n    this.setState({ search: { name: serachText } });\n  };\n\n  onColumnSortChange = (changedColumn, direction) => {\n    this.setState({ sort: direction == \"descending\" ? \"desc\" : \"asc\" });\n  };\n\n  onRowsDelete = rowsDeleted => {\n    const { list } = this.props.data;\n    const e = list[rowsDeleted.data[0].index];\n    this.props.deletedById(e.id);\n    console.log(\"id : \", e.id);\n  };\n\n  render() {\n    const { classes, data, loading } = this.props;\n    const dataList = !loading && data ? data.list : [];\n    console.log(data);\n\n    const columns = [\n      {\n        name: \"id\",\n        label: \"ID\",\n        options: {\n          sortDirection: this.state.sort\n        }\n      },\n      {\n        name: \"name\",\n        label: \"Name\",\n        options: {\n          sort: false\n        }\n      },\n      {\n        name: \"description\",\n        label: \"Description\",\n        options: {\n          sort: false\n        }\n      }\n    ];\n\n    return (\n      <div>\n        <Header>\n          <Container>\n            <div className={classes}>\n              <button\n                onClick={this.onAdd}\n                className={classes}\n                className=\"ui orange button\"\n              >\n                <i className=\"plus square outline icon\"></i>\n                New Unit\n              </button>\n            </div>\n            <MUIDataTable\n              title={\"Units List\"}\n              data={dataList}\n              columns={columns}\n              options={{\n                serverSide: true,\n                page: this.state.page,\n                filter: false,\n                count: data?.total,\n                onRowsDelete: this.onRowsDelete,\n                onRowClick: this.onRowClick,\n                rowsPerPage: this.state.size,\n                rowsPerPageOptions: [1, 2, 3, 5, 10],\n                onChangeRowsPerPage: this.onChangeRowsPerPage,\n                onChangePage: this.onChangePage,\n                onSearchChange: this.onSearchChange,\n                onColumnSortChange: this.onColumnSortChange,\n                searchText: this.state.search.name,\n                selectableRows: \"single\",\n                onRowsDelete: this.onRowsDelete,\n                textLabels: {\n                  body: {\n                    noMatch: loading ? (\n                      <CircularProgress />\n                    ) : (\n                      \"Sorry, no matching records found\"\n                    )\n                  }\n                }\n              }}\n            />\n            <button\n              className=\"ui orange button\"\n              onClick={this.onReload}\n              disabled={loading}\n            >\n              <i className=\"sync icon\"></i>Reload\n            </button>\n          </Container>\n        </Header>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  deleteData: state.deletedById.data,\n  data: state.findUnits.data,\n  loading: state.findUnits.loading || state.deletedById.loading,\n  error: state.findUnits.error || state.deletedById.error\n});\n\nconst mapDispatchToProps = {\n  findAll,\n  deletedById\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UnitPageList);\n"]},"metadata":{},"sourceType":"module"}