{"ast":null,"code":"import { FIND_UNIT_REQUEST, FIND_UNIT_SUCCESS, FIND_UNIT_FAILURE, FIND_UNITS_REQUEST, FIND_UNITS_SUCCESS, FIND_UNITS_FAILURE } from \"./constants\";\nimport axios from \"axios\";\n\nfunction sleep(delay) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport const findById = id => dispatch => {\n  dispatch({\n    type: FIND_UNIT_REQUEST\n  });\n  axios.get(`http://localhost:8080/units/${id}`).then(res => sleep(2000, res)).then(res => res.data).then(resData => {\n    if (resData.code != 0) {\n      throw new Error(resData.message || \"Uknown error.\");\n    }\n\n    return resData.data;\n  }).then(data => {\n    dispatch({\n      type: FIND_UNITS_SUCCESS,\n      data: data\n    });\n  }).catch(error => {\n    dispatch({\n      type: FIND_UNIT_FAILURE,\n      error: error\n    });\n  });\n};\nexport const findAll = () => dispatch => {\n  dispatch({\n    type: FIND_UNITS_REQUEST\n  });\n  axios.get(\"http://localhost:8080/units\").then(res => res.data).then(resData => {\n    if (resData.code != 0) {\n      throw new Error(resData.message || \"Uknown error.\");\n    }\n\n    return resData.data;\n  }).then(data => {\n    dispatch({\n      type: FIND_UNITS_SUCCESS,\n      data: data\n    });\n  });\n};","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/action/units.js"],"names":["FIND_UNIT_REQUEST","FIND_UNIT_SUCCESS","FIND_UNIT_FAILURE","FIND_UNITS_REQUEST","FIND_UNITS_SUCCESS","FIND_UNITS_FAILURE","axios","sleep","delay","Promise","resolve","setTimeout","findById","id","dispatch","type","get","then","res","data","resData","code","Error","message","catch","error","findAll"],"mappings":"AAAA,SACEA,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,kBAJF,EAKEC,kBALF,EAMEC,kBANF,QAOO,aAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkB;AACnCC,IAAAA,UAAU,CAACD,OAAD,EAAUF,KAAV,CAAV;AACD,GAFM,CAAP;AAGD;;AAED,OAAO,MAAMI,QAAQ,GAAGC,EAAE,IAAIC,QAAQ,IAAI;AACxCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEf;AAAR,GAAD,CAAR;AACAM,EAAAA,KAAK,CACFU,GADH,CACQ,+BAA8BH,EAAG,EADzC,EAEGI,IAFH,CAEQC,GAAG,IAAIX,KAAK,CAAC,IAAD,EAAOW,GAAP,CAFpB,EAGGD,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAHnB,EAIGF,IAJH,CAIQG,OAAO,IAAI;AACf,QAAIA,OAAO,CAACC,IAAR,IAAgB,CAApB,EAAuB;AACrB,YAAM,IAAIC,KAAJ,CAAUF,OAAO,CAACG,OAAR,IAAmB,eAA7B,CAAN;AACD;;AACD,WAAOH,OAAO,CAACD,IAAf;AACD,GATH,EAUGF,IAVH,CAUQE,IAAI,IAAI;AACZL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,kBADC;AAEPe,MAAAA,IAAI,EAAEA;AAFC,KAAD,CAAR;AAID,GAfH,EAgBGK,KAhBH,CAgBSC,KAAK,IAAI;AACdX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEb,iBADC;AAEPuB,MAAAA,KAAK,EAAEA;AAFA,KAAD,CAAR;AAID,GArBH;AAsBD,CAxBM;AA0BP,OAAO,MAAMC,OAAO,GAAG,MAAMZ,QAAQ,IAAI;AACvCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR;AACAG,EAAAA,KAAK,CACFU,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQG,OAAO,IAAI;AACf,QAAIA,OAAO,CAACC,IAAR,IAAgB,CAApB,EAAuB;AACrB,YAAM,IAAIC,KAAJ,CAAUF,OAAO,CAACG,OAAR,IAAmB,eAA7B,CAAN;AACD;;AACD,WAAOH,OAAO,CAACD,IAAf;AACD,GARH,EASGF,IATH,CASQE,IAAI,IAAI;AACZL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,kBADC;AAEPe,MAAAA,IAAI,EAAEA;AAFC,KAAD,CAAR;AAID,GAdH;AAeD,CAjBM","sourcesContent":["import {\n  FIND_UNIT_REQUEST,\n  FIND_UNIT_SUCCESS,\n  FIND_UNIT_FAILURE,\n  FIND_UNITS_REQUEST,\n  FIND_UNITS_SUCCESS,\n  FIND_UNITS_FAILURE\n} from \"./constants\";\nimport axios from \"axios\";\n\nfunction sleep(delay) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport const findById = id => dispatch => {\n  dispatch({ type: FIND_UNIT_REQUEST });\n  axios\n    .get(`http://localhost:8080/units/${id}`)\n    .then(res => sleep(2000, res))\n    .then(res => res.data)\n    .then(resData => {\n      if (resData.code != 0) {\n        throw new Error(resData.message || \"Uknown error.\");\n      }\n      return resData.data;\n    })\n    .then(data => {\n      dispatch({\n        type: FIND_UNITS_SUCCESS,\n        data: data\n      });\n    })\n    .catch(error => {\n      dispatch({\n        type: FIND_UNIT_FAILURE,\n        error: error\n      });\n    });\n};\n\nexport const findAll = () => dispatch => {\n  dispatch({ type: FIND_UNITS_REQUEST });\n  axios\n    .get(\"http://localhost:8080/units\")\n    .then(res => res.data)\n    .then(resData => {\n      if (resData.code != 0) {\n        throw new Error(resData.message || \"Uknown error.\");\n      }\n      return resData.data;\n    })\n    .then(data => {\n      dispatch({\n        type: FIND_UNITS_SUCCESS,\n        data: data\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}