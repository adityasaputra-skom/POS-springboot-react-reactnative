{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/home/Chart.js\";\nimport React, { Component } from \"react\";\nimport { YearSummary } from \"../../action/transactions\";\nimport { connect } from \"react-redux\";\nimport ZingChart from \"zingchart-react\";\n\nclass Chart extends Component {\n  constructor(props) {\n    var _this$props$data, _this$props$data2;\n\n    super(props);\n\n    this.onReload = () => {\n      this.reload();\n    };\n\n    this.reload = () => {\n      this.props.YearSummary({\n        year: 2020\n      });\n    };\n\n    this.state = {\n      config: {\n        type: \"bar\",\n        \"scale-x\": {\n          values: (_this$props$data = this.props.data) === null || _this$props$data === void 0 ? void 0 : _this$props$data.entries.map\n        },\n        series: [{\n          values: (_this$props$data2 = this.props.data) === null || _this$props$data2 === void 0 ? void 0 : _this$props$data2.entries.map(entry => entry.amount)\n        }]\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ZingChart, {\n      data: this.state.config,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.findSummaryByYear.data,\n  loading: state.findSummaryByYear.loading,\n  error: state.findSummaryByYear.error\n});\n\nconst mapDispatchToProps = {\n  YearSummary\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/home/Chart.js"],"names":["React","Component","YearSummary","connect","ZingChart","Chart","constructor","props","onReload","reload","year","state","config","type","values","data","entries","map","series","entry","amount","componentDidMount","render","mapStateToProps","findSummaryByYear","loading","error","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AACA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC5BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA;;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,QAjBmB,GAiBR,MAAM;AACf,WAAKC,MAAL;AACD,KAnBkB;;AAAA,SAqBnBA,MArBmB,GAqBV,MAAM;AACb,WAAKF,KAAL,CAAWL,WAAX,CAAuB;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAAvB;AACD,KAvBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,KADA;AAEN,mBAAW;AACTC,UAAAA,MAAM,sBAAE,KAAKP,KAAL,CAAWQ,IAAb,qDAAE,iBAAiBC,OAAjB,CAAyBC;AADxB,SAFL;AAKNC,QAAAA,MAAM,EAAE,CACN;AACEJ,UAAAA,MAAM,uBAAE,KAAKP,KAAL,CAAWQ,IAAb,sDAAE,kBAAiBC,OAAjB,CAAyBC,GAAzB,CAA6BE,KAAK,IAAIA,KAAK,CAACC,MAA5C;AADV,SADM;AALF;AADG,KAAb;AAaD;;AAUDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,MAAL;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,KAAKX,KAAL,CAAWC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AApC2B;;AAuC9B,MAAMW,eAAe,GAAGZ,KAAK,KAAK;AAChCI,EAAAA,IAAI,EAAEJ,KAAK,CAACa,iBAAN,CAAwBT,IADE;AAEhCU,EAAAA,OAAO,EAAEd,KAAK,CAACa,iBAAN,CAAwBC,OAFD;AAGhCC,EAAAA,KAAK,EAAEf,KAAK,CAACa,iBAAN,CAAwBE;AAHC,CAAL,CAA7B;;AAMA,MAAMC,kBAAkB,GAAG;AACzBzB,EAAAA;AADyB,CAA3B;AAIA,eAAeC,OAAO,CAACoB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CtB,KAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { YearSummary } from \"../../action/transactions\";\nimport { connect } from \"react-redux\";\nimport ZingChart from \"zingchart-react\";\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: {\n        type: \"bar\",\n        \"scale-x\": {\n          values: this.props.data?.entries.map\n        },\n        series: [\n          {\n            values: this.props.data?.entries.map(entry => entry.amount)\n          }\n        ]\n      }\n    };\n  }\n\n  onReload = () => {\n    this.reload();\n  };\n\n  reload = () => {\n    this.props.YearSummary({ year: 2020 });\n  };\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  render() {\n    return (\n      <div>\n        <ZingChart data={this.state.config} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.findSummaryByYear.data,\n  loading: state.findSummaryByYear.loading,\n  error: state.findSummaryByYear.error\n});\n\nconst mapDispatchToProps = {\n  YearSummary\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);\n"]},"metadata":{},"sourceType":"module"}