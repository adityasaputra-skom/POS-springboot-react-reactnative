{"ast":null,"code":"const data = [{\n  id: 1,\n  name: \"Gram\"\n}, {\n  id: 2,\n  name: \"Pieces\"\n}, {\n  id: 3,\n  name: \"Kilogram\"\n}, {\n  id: 4,\n  name: \"Liter\"\n}, {\n  id: 5,\n  name: \"Kilobyte\"\n}, {\n  id: 6,\n  name: \"Kilobyte\"\n}, {\n  id: 7,\n  name: \"Kilobyte\"\n}];\nexport function findByid(id) {\n  let parseId = parseInt(id);\n\n  for (const e of data) {\n    if (e.id === parseId) {\n      return e;\n    }\n  }\n}\nexport function findAll() {\n  return data;\n}","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/action/units.js"],"names":["data","id","name","findByid","parseId","parseInt","e","findAll"],"mappings":"AAAA,MAAMA,IAAI,GAAG,CACX;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADW,EAKX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALW,EASX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CATW,EAaX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAbW,EAiBX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAjBW,EAqBX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CArBW,EAyBX;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAzBW,CAAb;AA8BA,OAAO,SAASC,QAAT,CAAkBF,EAAlB,EAAsB;AACzB,MAAIG,OAAO,GAAGC,QAAQ,CAACJ,EAAD,CAAtB;;AACF,OAAK,MAAMK,CAAX,IAAgBN,IAAhB,EAAsB;AACpB,QAAIM,CAAC,CAACL,EAAF,KAASG,OAAb,EAAsB;AACpB,aAAOE,CAAP;AACD;AACF;AACF;AACD,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOP,IAAP;AACD","sourcesContent":["const data = [\n  {\n    id: 1,\n    name: \"Gram\"\n  },\n  {\n    id: 2,\n    name: \"Pieces\"\n  },\n  {\n    id: 3,\n    name: \"Kilogram\"\n  },\n  {\n    id: 4,\n    name: \"Liter\"\n  },\n  {\n    id: 5,\n    name: \"Kilobyte\"\n  },\n  {\n    id: 6,\n    name: \"Kilobyte\"\n  },\n  {\n    id: 7,\n    name: \"Kilobyte\"\n  }\n];\nexport function findByid(id) {\n    let parseId = parseInt(id);\n  for (const e of data) {\n    if (e.id === parseId) {\n      return e;\n    }\n  }\n}\nexport function findAll() {\n  return data;\n}\n"]},"metadata":{},"sourceType":"module"}