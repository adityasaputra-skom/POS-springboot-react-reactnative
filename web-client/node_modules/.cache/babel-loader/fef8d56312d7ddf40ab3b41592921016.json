{"ast":null,"code":"import { FIND_UNIT_REQUEST, FIND_UNIT_SUCCESS, FIND_UNIT_FAILURE, FIND_UNITS_REQUEST, FIND_UNITS_SUCCESS, FIND_UNITS_FAILURE } from \"../action/constants\";\nexport function findUnitById(state = {\n  data: null,\n  loading: false,\n  error: null\n}, action) {\n  switch (action.type) {\n    case \"FIND_UNIT_BY_ID\":\n      for (const e of data) {\n        if (e.id == action.id) {\n          return e;\n        }\n      }\n\n    default:\n      return state;\n  }\n}\nexport function findUnits(state = [], action) {\n  switch (action.type) {\n    case \"FIND_UNITS\":\n      return data;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/reducers/units.js"],"names":["FIND_UNIT_REQUEST","FIND_UNIT_SUCCESS","FIND_UNIT_FAILURE","FIND_UNITS_REQUEST","FIND_UNITS_SUCCESS","FIND_UNITS_FAILURE","findUnitById","state","data","loading","error","action","type","e","id","findUnits"],"mappings":"AAAA,SACEA,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,kBAJF,EAKEC,kBALF,EAMEC,kBANF,QAOO,qBAPP;AASA,OAAO,SAASC,YAAT,CAAsBC,KAAK,GAAG;AAAEC,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,OAAO,EAAE,KAAvB;AAA8BC,EAAAA,KAAK,EAAE;AAArC,CAA9B,EAA2EC,MAA3E,EAAmF;AACxF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,WAAK,MAAMC,CAAX,IAAgBL,IAAhB,EAAsB;AACpB,YAAIK,CAAC,CAACC,EAAF,IAAQH,MAAM,CAACG,EAAnB,EAAuB;AACrB,iBAAOD,CAAP;AACD;AACF;;AACH;AACE,aAAON,KAAP;AARJ;AAUD;AAED,OAAO,SAASQ,SAAT,CAAmBR,KAAK,GAAG,EAA3B,EAA+BI,MAA/B,EAAuC;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAOJ,IAAP;;AACF;AACE,aAAOD,KAAP;AAJJ;AAMD","sourcesContent":["import {\n  FIND_UNIT_REQUEST,\n  FIND_UNIT_SUCCESS,\n  FIND_UNIT_FAILURE,\n  FIND_UNITS_REQUEST,\n  FIND_UNITS_SUCCESS,\n  FIND_UNITS_FAILURE\n} from \"../action/constants\";\n\nexport function findUnitById(state = { data: null, loading: false, error: null }, action) {\n  switch (action.type) {\n    case \"FIND_UNIT_BY_ID\":\n      for (const e of data) {\n        if (e.id == action.id) {\n          return e;\n        }\n      }\n    default:\n      return state;\n  }\n}\n\nexport function findUnits(state = [], action) {\n  switch (action.type) {\n    case \"FIND_UNITS\":\n      return data;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}