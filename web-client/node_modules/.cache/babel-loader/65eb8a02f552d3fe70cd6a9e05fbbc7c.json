{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/stock/StockListPage.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../../component/header\";\nimport MUIDataTable from \"mui-datatables\";\nimport { findAll, deletedStockById, addStocks } from \"../../action/stocks\";\nimport { Container } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { CircularProgress, withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\";\n\nclass StockListPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onReload = () => {\n      this.reload();\n    };\n\n    this.reload = () => {\n      this.props.findAll(this.state.table);\n    };\n\n    this.onRowClick = rowData => {\n      this.props.history.push(`/stocks/${rowData[0]}`);\n    };\n\n    this.onAdd = () => {\n      this.props.history.push(`/stocks/add`);\n    };\n\n    this.onChangeRowsPerPage = numbersOfRow => {\n      const {\n        table\n      } = this.state;\n      this.setState({\n        table: { ...table,\n          size: numbersOfRow\n        }\n      });\n    };\n\n    this.onChangePage = currentPage => {\n      const {\n        table\n      } = this.state;\n      this.setState({\n        table: { ...table,\n          serach: {\n            name: currentPage\n          }\n        }\n      });\n    };\n\n    this.onColumnSortChange = (changedColumn, direction) => {\n      const {\n        table\n      } = this.state;\n      const sort = direction === \"descending\" ? \"desc\" : \"asc\";\n      this.setState({\n        table: { ...table,\n          sort\n        }\n      });\n    };\n\n    this.onRowsDelete = rowsDeleted => {\n      const {\n        list\n      } = this.props.data;\n      const e = list[rowsDeleted.data[0].index];\n      this.props.deletedById(e.id);\n      return false;\n    };\n\n    this.state = {\n      data: [],\n      total: 0,\n      table: {\n        sort: \"asc\",\n        size: 5,\n        page: 0,\n        search: {\n          id: \"\",\n          quantity: \"\",\n          item: \"\",\n          unit: \"\"\n        }\n      },\n      error: null\n    };\n  }\n\n  componentDidAddUnit() {\n    const {\n      table\n    } = this.state;\n  }\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      deleteData,\n      deleteError,\n      error,\n      data\n    } = this.props;\n    const {\n      table\n    } = this.state;\n    console.log(data);\n\n    if (prevProps.data !== data) {\n      this.setState({\n        data: data.list,\n        total: data.total\n      });\n    } else if (prevState.table !== table || prevProps.deleteData !== deleteData) {\n      this.reload();\n    } else if (deleteError && prevProps.deleteError !== deleteError) {\n      this.setState({\n        error: deleteError\n      });\n    } else if (error && prevProps.error !== error) {\n      this.setState({\n        error: error\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      loading\n    } = this.props;\n    const {\n      data,\n      total,\n      error,\n      table\n    } = this.state;\n    const columns = [{\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        sortDirection: table.sort\n      }\n    }, {\n      name: \"item.name\",\n      label: \"Item\",\n      options: {\n        sort: false\n      }\n    }, {\n      name: \"quantity\",\n      label: \"Quantity\",\n      options: {\n        sort: false\n      }\n    }, {\n      name: \"unit.name\",\n      label: \"Unit\",\n      options: {\n        sort: false\n      }\n    }];\n    const options = {\n      serverSide: true,\n      page: table.page,\n      filter: false,\n      count: total,\n      onRowsDelete: this.onRowsDelete,\n      onRowClick: this.onRowClick,\n      rowsPerPage: table.size,\n      rowsPerPageOptions: [1, 2, 3, 5, 10],\n      onChangeRowsPerPage: this.onChangeRowsPerPage,\n      onChangePage: this.onChangePage,\n      onSearchChange: this.onSearchChange,\n      onColumnSortChange: this.onColumnSortChange,\n      selectableRows: \"single\",\n      onRowsDelete: this.onRowsDelete,\n      textLabels: {\n        body: {\n          noMatch: loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }\n          }) : \"Sorry, no matching records found\"\n        }\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"ui button\",\n      \"data-inverted\": \"\",\n      \"data-tooltip\": \"Add your data\",\n      \"data-position\": \"left center\",\n      onClick: this.onAdd,\n      className: \"ui orange button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"plus square outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }), \"New Stocks\"), /*#__PURE__*/React.createElement(MUIDataTable, {\n      error: error,\n      title: \"Transaction List\",\n      data: !loading ? data : [],\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttonContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui orange button\",\n      onClick: this.reload,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"sync icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }), \"Reload\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.findStocks.data || [],\n  loading: state.findStocks.loading,\n  error: state.findStocks.error\n});\n\nconst mapDispatchToProps = {\n  findAll,\n  deletedStockById,\n  addStocks\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, mapDispatchToProps)(StockListPage));","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/stock/StockListPage.js"],"names":["React","Component","Header","MUIDataTable","findAll","deletedStockById","addStocks","Container","connect","CircularProgress","withStyles","styles","StockListPage","constructor","props","onReload","reload","state","table","onRowClick","rowData","history","push","onAdd","onChangeRowsPerPage","numbersOfRow","setState","size","onChangePage","currentPage","serach","name","onColumnSortChange","changedColumn","direction","sort","onRowsDelete","rowsDeleted","list","data","e","index","deletedById","id","total","page","search","quantity","item","unit","error","componentDidAddUnit","componentDidMount","componentDidUpdate","prevProps","prevState","deleteData","deleteError","console","log","render","classes","loading","columns","label","options","sortDirection","serverSide","filter","count","rowsPerPage","rowsPerPageOptions","onSearchChange","selectableRows","textLabels","body","noMatch","buttonContainer","mapStateToProps","findStocks","mapDispatchToProps","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../../component/header\";\nimport MUIDataTable from \"mui-datatables\";\nimport { findAll, deletedStockById, addStocks } from \"../../action/stocks\";\nimport { Container } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { CircularProgress, withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\";\n\nclass StockListPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      total: 0,\n      table: {\n        sort: \"asc\",\n        size: 5,\n        page: 0,\n        search: {\n          id: \"\",\n          quantity: \"\",\n          item: \"\",\n          unit: \"\"\n        }\n      },\n      error: null\n    };\n  }\n\n  onReload = () => {\n    this.reload();\n  };\n\n  reload = () => {\n    this.props.findAll(this.state.table);\n  };\n\n  componentDidAddUnit() {\n    const { table } = this.state;\n  }\n\n  onRowClick = rowData => {\n    this.props.history.push(`/stocks/${rowData[0]}`);\n  };\n\n  onAdd = () => {\n    this.props.history.push(`/stocks/add`);\n  };\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  onChangeRowsPerPage = numbersOfRow => {\n    const { table } = this.state;\n    this.setState({ table: { ...table, size: numbersOfRow } });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { deleteData, deleteError, error, data } = this.props;\n    const { table } = this.state;\n    console.log(data);\n\n    if (prevProps.data !== data) {\n      this.setState({ data: data.list, total: data.total });\n    } else if (\n      prevState.table !== table ||\n      prevProps.deleteData !== deleteData\n    ) {\n      this.reload();\n    } else if (deleteError && prevProps.deleteError !== deleteError) {\n      this.setState({ error: deleteError });\n    } else if (error && prevProps.error !== error) {\n      this.setState({ error: error });\n    }\n  }\n\n  onChangePage = currentPage => {\n    const { table } = this.state;\n    this.setState({ table: { ...table, serach: { name: currentPage } } });\n  };\n\n\n  onColumnSortChange = (changedColumn, direction) => {\n    const { table } = this.state;\n    const sort = direction === \"descending\" ? \"desc\" : \"asc\";\n    this.setState({ table: { ...table, sort } });\n  };\n\n  onRowsDelete = rowsDeleted => {\n    const { list } = this.props.data;\n    const e = list[rowsDeleted.data[0].index];\n    this.props.deletedById(e.id);\n    return false;\n  };\n\n  render() {\n    const { classes, loading } = this.props;\n    const { data, total, error, table } = this.state;\n\n    const columns = [\n      {\n        name: \"id\",\n        label: \"ID\",\n        options: {\n          sortDirection: table.sort\n        }\n      },\n      {\n        name: \"item.name\",\n        label: \"Item\",\n        options: {\n          sort: false\n        }\n      },\n      {\n        name: \"quantity\",\n        label: \"Quantity\",\n        options: {\n          sort: false\n        }\n      },\n      {\n        name: \"unit.name\",\n        label: \"Unit\",\n        options: {\n          sort: false\n        }\n      }\n    ];\n\n    const options = {\n      serverSide: true,\n      page: table.page,\n      filter: false,\n      count: total,\n      onRowsDelete: this.onRowsDelete,\n      onRowClick: this.onRowClick,\n      rowsPerPage: table.size,\n      rowsPerPageOptions: [1, 2, 3, 5, 10],\n      onChangeRowsPerPage: this.onChangeRowsPerPage,\n      onChangePage: this.onChangePage,\n      onSearchChange: this.onSearchChange,\n      onColumnSortChange: this.onColumnSortChange,\n      selectableRows: \"single\",\n      onRowsDelete: this.onRowsDelete,\n      textLabels: {\n        body: {\n          noMatch: loading ? (\n            <CircularProgress />\n          ) : (\n            \"Sorry, no matching records found\"\n          )\n        }\n      }\n    };\n    return (\n      <div>\n        <Header>\n          <Container>\n            <div\n              class=\"ui button\"\n              data-inverted=\"\"\n              data-tooltip=\"Add your data\"\n              data-position=\"left center\"\n              onClick={this.onAdd}\n              className=\"ui orange button\"\n            >\n              <i className=\"plus square outline icon\"></i>\n              New Stocks\n            </div>\n            <MUIDataTable\n              error={error}\n              title={\"Transaction List\"}\n              data={!loading ? data : []}\n              columns={columns}\n              options={options}\n            />\n            <div className={classes.buttonContainer}>\n              <button\n                className=\"ui orange button\"\n                onClick={this.reload}\n                disabled={loading}\n              >\n                <i className=\"sync icon\"></i>Reload\n              </button>\n            </div>\n          </Container>\n        </Header>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.findStocks.data || [],\n  loading: state.findStocks.loading,\n  error: state.findStocks.error\n});\n\nconst mapDispatchToProps = {\n  findAll,\n  deletedStockById,\n  addStocks\n};\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(mapStateToProps, mapDispatchToProps)(StockListPage)\n);\n"]},"metadata":{},"sourceType":"module"}