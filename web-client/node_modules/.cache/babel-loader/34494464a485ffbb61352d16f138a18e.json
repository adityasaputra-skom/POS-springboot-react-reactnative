{"ast":null,"code":"import { FIND_STOCK_REQUEST, FIND_STOCK_SUCCESS, FIND_STOCK_FAILURE, FIND_STOCKS_REQUEST, FIND_STOCKS_SUCCESS, FIND_STOCKS_FAILURE, DELETE_STOCK_REQUEST, DELETE_STOCK_SUCCESS, DELETE_STOCK_FAILURE, SAVE_STOCK_FAILURE, SAVE_STOCK_REQUEST, SAVE_STOCK_SUCCESS, ADD_STOCK_FAILURE, ADD_STOCK_REQUEST, ADD_STOCK_SUCCESS } from \"./constants\";\nimport { instanceAxios } from \"../utils/apiUtil\";\n\nfunction sleep(delay, value) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay, value);\n  });\n}\n\nexport const addStocks = id => dispatch => {\n  dispatch({\n    type: ADD_STOCK_REQUEST\n  });\n  instanceAxios.post(`stocks/${id}`).then(data => sleep(500, data)).then(data => data).then(data => {\n    dispatch(addSuccess(data));\n  }).catch(error => {\n    dispatch(addFailure(error));\n  });\n};\nexport const deletedStockById = id => dispatch => {\n  dispatch({\n    type: DELETE_STOCK_REQUEST\n  });\n  instanceAxios.delete(`stocks/${id}`).then(data => sleep(500, data)).then(data => data).then(data => {\n    dispatch(deletedSuccess(data));\n  }).catch(error => {\n    dispatch(deletedStockFailure(error));\n  });\n};\nexport const saveStock = ({\n  id,\n  quantity,\n  item,\n  unit\n}) => dispatch => {\n  dispatch({\n    type: SAVE_STOCK_REQUEST\n  });\n  const request = id ? instanceAxios.put(`stocks/${id}`, {\n    id,\n    name,\n    quantity,\n    item,\n    unit\n  }) : instanceAxios.post(`stock`, {\n    name\n  });\n  request.then(data => sleep(500, data)).then(data => data).then(data => {\n    dispatch(saveSuccess(data));\n  }).catch(error => {\n    dispatch(saveFailure(error));\n  });\n};\nexport const findStocksById = id => dispatch => {\n  dispatch({\n    type: FIND_STOCK_REQUEST\n  });\n  instanceAxios.get(`stocks/${id}`).then(data => sleep(500, data)).then(data => data).then(data => {\n    dispatch(findByIdSucces(data));\n  }).catch(error => {\n    dispatch(findByIdFailure(error));\n  });\n};\nexport const findAll = ({\n  search,\n  sort = \"asc\",\n  page = 0,\n  size = 10\n} = {}) => dispatch => {\n  dispatch({\n    type: FIND_STOCKS_REQUEST\n  });\n  instanceAxios.get(`stocks`, {\n    params: { ...search,\n      sort,\n      page,\n      size\n    }\n  }).then(data => sleep(2000, data)).then(data => data).then(data => {\n    dispatch(findAllSucces(data));\n  }).catch(error => {\n    dispatch(findAllFailure(error));\n  });\n};\n\nfunction findByIdSucces(data) {\n  return {\n    type: FIND_STOCK_SUCCESS,\n    data: data\n  };\n}\n\nfunction findByIdFailure(error) {\n  return {\n    type: FIND_STOCK_FAILURE,\n    error: error\n  };\n}\n\nfunction findAllSucces(data) {\n  return {\n    type: FIND_STOCKS_SUCCESS,\n    data: data\n  };\n}\n\nfunction findAllFailure(error) {\n  return {\n    type: FIND_STOCKS_FAILURE,\n    error: error\n  };\n}\n\nfunction deletedSuccess(data) {\n  return {\n    type: DELETE_STOCK_SUCCESS,\n    data: data\n  };\n}\n\nfunction deletedStockFailure(error) {\n  return {\n    type: DELETE_STOCK_FAILURE,\n    error: error\n  };\n}\n\nfunction saveFailure(error) {\n  return {\n    type: SAVE_STOCK_FAILURE,\n    error: error\n  };\n}\n\nfunction saveSuccess(data) {\n  return {\n    type: SAVE_STOCK_SUCCESS,\n    data: data\n  };\n}\n\nfunction addFailure(error) {\n  return {\n    type: ADD_STOCK_FAILURE,\n    error: error\n  };\n}\n\nfunction addSuccess(data) {\n  return {\n    type: ADD_STOCK_SUCCESS,\n    data: data\n  };\n}","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/action/stocks.js"],"names":["FIND_STOCK_REQUEST","FIND_STOCK_SUCCESS","FIND_STOCK_FAILURE","FIND_STOCKS_REQUEST","FIND_STOCKS_SUCCESS","FIND_STOCKS_FAILURE","DELETE_STOCK_REQUEST","DELETE_STOCK_SUCCESS","DELETE_STOCK_FAILURE","SAVE_STOCK_FAILURE","SAVE_STOCK_REQUEST","SAVE_STOCK_SUCCESS","ADD_STOCK_FAILURE","ADD_STOCK_REQUEST","ADD_STOCK_SUCCESS","instanceAxios","sleep","delay","value","Promise","resolve","setTimeout","addStocks","id","dispatch","type","post","then","data","addSuccess","catch","error","addFailure","deletedStockById","delete","deletedSuccess","deletedStockFailure","saveStock","quantity","item","unit","request","put","name","saveSuccess","saveFailure","findStocksById","get","findByIdSucces","findByIdFailure","findAll","search","sort","page","size","params","findAllSucces","findAllFailure"],"mappings":"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","sourcesContent":["import {\n  FIND_STOCK_REQUEST,\n  FIND_STOCK_SUCCESS,\n  FIND_STOCK_FAILURE,\n  FIND_STOCKS_REQUEST,\n  FIND_STOCKS_SUCCESS,\n  FIND_STOCKS_FAILURE,\n  DELETE_STOCK_REQUEST,\n  DELETE_STOCK_SUCCESS,\n  DELETE_STOCK_FAILURE,\n  SAVE_STOCK_FAILURE,\n  SAVE_STOCK_REQUEST,\n  SAVE_STOCK_SUCCESS,\n  ADD_STOCK_FAILURE,\n  ADD_STOCK_REQUEST,\n  ADD_STOCK_SUCCESS\n} from \"./constants\";\nimport { instanceAxios } from \"../utils/apiUtil\";\n\nfunction sleep(delay, value) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, delay, value);\n  });\n}\n\nexport const addStocks = id => dispatch => {\n  dispatch({ type: ADD_STOCK_REQUEST });\n  instanceAxios\n    .post(`stocks/${id}`)\n    .then(data => sleep(500, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(addSuccess(data));\n    })\n    .catch(error => {\n      dispatch(addFailure(error));\n    });\n};\nexport const deletedStockById = id => dispatch => {\n  dispatch({ type: DELETE_STOCK_REQUEST });\n  instanceAxios\n    .delete(`stocks/${id}`)\n    .then(data => sleep(500, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(deletedSuccess(data));\n    })\n    .catch(error => {\n      dispatch(deletedStockFailure(error));\n    });\n};\n\nexport const saveStock = ({ id, quantity, item, unit }) => dispatch => {\n  dispatch({ type: SAVE_STOCK_REQUEST });\n\n  const request = id\n    ? instanceAxios.put(`stocks/${id}`, { id, name, quantity, item, unit })\n    : instanceAxios.post(`stock`, { name });\n  request\n    .then(data => sleep(500, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(saveSuccess(data));\n    })\n    .catch(error => {\n      dispatch(saveFailure(error));\n    });\n};\n\nexport const findStocksById = id => dispatch => {\n  dispatch({ type: FIND_STOCK_REQUEST });\n  instanceAxios\n    .get(`stocks/${id}`)\n    .then(data => sleep(500, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(findByIdSucces(data));\n    })\n    .catch(error => {\n      dispatch(findByIdFailure(error));\n    });\n};\n\nexport const findAll = ({\n  search,\n  sort = \"asc\",\n  page = 0,\n  size = 10\n} = {}) => dispatch => {\n  dispatch({ type: FIND_STOCKS_REQUEST });\n  instanceAxios\n    .get(`stocks`, {\n      params: { ...search, sort, page, size }\n    })\n    .then(data => sleep(2000, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(findAllSucces(data));\n    })\n    .catch(error => {\n      dispatch(findAllFailure(error));\n    });\n};\n\nfunction findByIdSucces(data) {\n  return {\n    type: FIND_STOCK_SUCCESS,\n    data: data\n  };\n}\n\nfunction findByIdFailure(error) {\n  return {\n    type: FIND_STOCK_FAILURE,\n    error: error\n  };\n}\nfunction findAllSucces(data) {\n  return {\n    type: FIND_STOCKS_SUCCESS,\n    data: data\n  };\n}\n\nfunction findAllFailure(error) {\n  return {\n    type: FIND_STOCKS_FAILURE,\n    error: error\n  };\n}\n\nfunction deletedSuccess(data) {\n  return {\n    type: DELETE_STOCK_SUCCESS,\n    data: data\n  };\n}\n\nfunction deletedStockFailure(error) {\n  return {\n    type: DELETE_STOCK_FAILURE,\n    error: error\n  };\n}\n\nfunction saveFailure(error) {\n  return {\n    type: SAVE_STOCK_FAILURE,\n    error: error\n  };\n}\n\nfunction saveSuccess(data) {\n  return {\n    type: SAVE_STOCK_SUCCESS,\n    data: data\n  };\n}\n\nfunction addFailure(error) {\n  return {\n    type: ADD_STOCK_FAILURE,\n    error: error\n  };\n}\n\nfunction addSuccess(data) {\n  return {\n    type: ADD_STOCK_SUCCESS,\n    data: data\n  };\n}\n"]},"metadata":{},"sourceType":"module"}