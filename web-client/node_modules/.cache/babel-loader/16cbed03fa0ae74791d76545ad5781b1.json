{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/transaction/detail/TransactionPage.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../../../component/header\";\nimport { TextField, withStyles, CircularProgress } from \"@material-ui/core\";\nimport { findById, saveTransactions, findAll } from \"../../../action/transactions\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"semantic-ui-react\";\nimport styles from \"./styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nexport class TransactionPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onBack = event => {\n      event.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push(\"/transactions\");\n    };\n\n    this.onChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      const {\n        form\n      } = this.state;\n      this.setState({\n        form: { ...form,\n          [name]: value\n        }\n      });\n    };\n\n    this.onTypeChange = (event, value) => {\n      const {\n        form\n      } = this.state;\n      this.setState({\n        form: { ...form,\n          type: value\n        }\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.saveTransactions(this.state.form);\n      console.log(this.state);\n    };\n\n    this.onTypeTextChange = event => {\n      const {\n        value\n      } = event.target;\n\n      if (value) {\n        this.props.findTransaction({\n          search: {\n            type: value\n          }\n        });\n      }\n    };\n\n    const {\n      match\n    } = this.props;\n    this.state = {\n      form: {\n        id: match.params.id,\n        amount: \"\",\n        description: \"\",\n        type: \"\"\n      },\n      transactionsOptions: [],\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      form\n    } = this.state;\n\n    if (form.id) {\n      this.props.findById(form.id);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      saveData,\n      data,\n      error,\n      saveError,\n      history,\n      transactionsData\n    } = this.props;\n\n    if (prevProps.transactionsData != transactionsData) {\n      this.setState({\n        transactionsOptions: transactionsData\n      });\n    } else if (prevProps.data != data) {\n      this.setState({\n        form: data\n      });\n    } else if (prevProps.saveError !== saveError) {\n      this.setState({\n        error: saveError\n      });\n    } else if (prevProps.error !== error) {\n      this.setState({\n        error: error\n      });\n    } else if (saveData && prevProps.saveData !== saveData) {\n      history.goBack();\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      loading,\n      saveError,\n      transactionsLoading,\n      transactionsData\n    } = this.props;\n    const {\n      form,\n      error\n    } = this.state;\n    const transactionsOptions = !transactionsLoading && transactionsData ? transactionsData : [];\n    const errorData = (saveError === null || saveError === void 0 ? void 0 : saveError.data) || {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, !loading ? /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, (form === null || form === void 0 ? void 0 : form.id) && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"id\",\n      label: \"ID\",\n      value: form === null || form === void 0 ? void 0 : form.id,\n      name: \"id\",\n      variant: \"filled\",\n      inputProps: {\n        readOnly: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      error: errorData.name,\n      helperText: errorData.name ? errorData.name[0] : null,\n      id: \"amount\",\n      label: \"Amount\",\n      value: form === null || form === void 0 ? void 0 : form.amount,\n      name: \"amount\",\n      variant: \"filled\",\n      onChange: this.onChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"description\",\n      label: \"Description\",\n      value: form === null || form === void 0 ? void 0 : form.description,\n      name: \"description\",\n      variant: \"filled\",\n      onChange: this.onChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      value: form === null || form === void 0 ? void 0 : form.type,\n      onChange: this.onTypeChange,\n      id: \"size-small-standard\",\n      size: \"small\",\n      fullWidth: true,\n      options: !transactionsLoading ? transactionsOptions : [],\n      getOptionLabel: option => option.title,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        variant: \"standard\",\n        onChange: this.onTypeTextChange,\n        label: form === null || form === void 0 ? void 0 : form.type,\n        placeholder: \"Choice Type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 23\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttonContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui orange button\",\n      onClick: this.onBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"reply all icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }), \"Back\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui orange button\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"save icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }), \"Save\"))) : /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Snackbar, {\n      open: this.state.error,\n      autoHideDuration: 3000,\n      onClose: () => this.setState({\n        error: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: () => this.setState({\n        error: false\n      }),\n      elevation: 6,\n      variant: \"filled\",\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, error === null || error === void 0 ? void 0 : error.message)))));\n  }\n\n}\nconst options = [{\n  title: \"SELL\"\n}, {\n  title: \"PURCHASE\"\n}];\n\nconst mapStateToProps = state => ({\n  data: state.findTransactionsById.data,\n  loading: state.findTransactionsById.loading || state.saveTransactions.loading,\n  error: state.findTransactionsById.error,\n  saveData: state.saveTransactions.data,\n  saveError: state.saveTransactions.error,\n  transactionsLoading: state.findAll.loading || [],\n  transactionsError: state.findAll.error,\n  transactionsData: state.findAll.data\n});\n\nconst mapDispatchToProps = {\n  findById,\n  saveTransactions,\n  findAll\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, mapDispatchToProps)(TransactionPage));","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/scenes/transaction/detail/TransactionPage.js"],"names":["React","Component","Header","TextField","withStyles","CircularProgress","findById","saveTransactions","findAll","connect","Container","styles","Snackbar","Alert","Autocomplete","TransactionPage","constructor","props","onBack","event","preventDefault","history","push","onChange","name","value","target","form","state","setState","onTypeChange","type","onSubmit","console","log","onTypeTextChange","findTransaction","search","match","id","params","amount","description","transactionsOptions","error","componentDidMount","componentDidUpdate","prevProps","prevState","saveData","data","saveError","transactionsData","goBack","render","classes","loading","transactionsLoading","errorData","formField","readOnly","option","title","buttonContainer","message","options","mapStateToProps","findTransactionsById","transactionsError","mapDispatchToProps","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../../../component/header\";\nimport { TextField, withStyles, CircularProgress } from \"@material-ui/core\";\nimport {\n  findById,\n  saveTransactions,\n  findAll\n} from \"../../../action/transactions\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"semantic-ui-react\";\nimport styles from \"./styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nexport class TransactionPage extends Component {\n  constructor(props) {\n    super(props);\n    const { match } = this.props;\n    this.state = {\n      form: {\n        id: match.params.id,\n        amount: \"\",\n        description: \"\",\n        type: \"\"\n      },\n      transactionsOptions: [],\n      error: false\n    };\n  }\n\n  onBack = event => {\n    event.preventDefault();\n    const { history } = this.props;\n    history.push(\"/transactions\");\n  };\n\n  componentDidMount() {\n    const { form } = this.state;\n    if (form.id) {\n      this.props.findById(form.id);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      saveData,\n      data,\n      error,\n      saveError,\n      history,\n      transactionsData\n    } = this.props;\n    if (prevProps.transactionsData != transactionsData) {\n      this.setState({ transactionsOptions: transactionsData });\n    } else if (prevProps.data != data) {\n      this.setState({ form: data });\n    } else if (prevProps.saveError !== saveError) {\n      this.setState({ error: saveError });\n    } else if (prevProps.error !== error) {\n      this.setState({ error: error });\n    } else if (saveData && prevProps.saveData !== saveData) {\n      history.goBack();\n    }\n  }\n\n  onChange = event => {\n    const { name, value } = event.target;\n    const { form } = this.state;\n    this.setState({ form: { ...form, [name]: value } });\n  };\n\n  onTypeChange = (event, value) => {\n    const { form } = this.state;\n    this.setState({ form: { ...form, type: value } });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.saveTransactions(this.state.form);\n    console.log(this.state);\n  };\n\n  onTypeTextChange = event => {\n    const { value } = event.target;\n    if (value) {\n      this.props.findTransaction({ search: { type: value } });\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      loading,\n      saveError,\n      transactionsLoading,\n      transactionsData\n    } = this.props;\n    const { form, error } = this.state;\n    const transactionsOptions =\n      !transactionsLoading && transactionsData ? transactionsData : [];\n    const errorData = saveError?.data || {};\n    return (\n      <div>\n        <Header>\n          <Container>\n            {!loading ? (\n              <form noValidate autoComplete=\"off\" onSubmit={this.onSubmit}>\n                {form?.id && (\n                  <div className={classes.formField}>\n                    <TextField\n                      id=\"id\"\n                      label=\"ID\"\n                      value={form?.id}\n                      name=\"id\"\n                      variant=\"filled\"\n                      inputProps={{ readOnly: true }}\n                    />\n                  </div>\n                )}\n                <div className={classes.formField}>\n                  <TextField\n                    error={errorData.name}\n                    helperText={errorData.name ? errorData.name[0] : null}\n                    id=\"amount\"\n                    label=\"Amount\"\n                    value={form?.amount}\n                    name=\"amount\"\n                    variant=\"filled\"\n                    onChange={this.onChange}\n                    fullWidth\n                  />\n                </div>\n                <div className={classes.formField}>\n                  <TextField\n                    id=\"description\"\n                    label=\"Description\"\n                    value={form?.description}\n                    name=\"description\"\n                    variant=\"filled\"\n                    onChange={this.onChange}\n                    fullWidth\n                  />\n                </div>\n                <div className={classes.formField}>\n                  <Autocomplete\n                    value={form?.type}\n                    onChange={this.onTypeChange}\n                    id=\"size-small-standard\"\n                    size=\"small\"\n                    fullWidth\n                    options={!transactionsLoading ? transactionsOptions : []}\n                    getOptionLabel={option => option.title}\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        onChange={this.onTypeTextChange}\n                        label={form?.type}\n                        placeholder=\"Choice Type\"\n                      />\n                    )}\n                  />\n                </div>\n\n                <div className={classes.buttonContainer}>\n                  <button className=\"ui orange button\" onClick={this.onBack}>\n                    <i class=\"reply all icon\"></i>\n                    Back\n                  </button>\n                  <button className=\"ui orange button\" disabled={loading}>\n                    <i className=\"save icon\"></i>\n                    Save\n                  </button>\n                </div>\n              </form>\n            ) : (\n              <CircularProgress />\n            )}\n            <Snackbar\n              open={this.state.error}\n              autoHideDuration={3000}\n              onClose={() => this.setState({ error: false })}\n            >\n              <Alert\n                onClose={() => this.setState({ error: false })}\n                elevation={6}\n                variant=\"filled\"\n                severity=\"error\"\n              >\n                {error?.message}\n              </Alert>\n            </Snackbar>\n          </Container>\n        </Header>\n      </div>\n    );\n  }\n}\n\nconst options = [{ title: \"SELL\" }, { title: \"PURCHASE\" }];\nconst mapStateToProps = state => ({\n  data: state.findTransactionsById.data,\n  loading: state.findTransactionsById.loading || state.saveTransactions.loading,\n  error: state.findTransactionsById.error,\n  saveData: state.saveTransactions.data,\n  saveError: state.saveTransactions.error,\n  transactionsLoading: state.findAll.loading || [],\n  transactionsError: state.findAll.error,\n  transactionsData: state.findAll.data\n});\n\nconst mapDispatchToProps = {\n  findById,\n  saveTransactions,\n  findAll\n};\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(mapStateToProps, mapDispatchToProps)(TransactionPage)\n);\n"]},"metadata":{},"sourceType":"module"}