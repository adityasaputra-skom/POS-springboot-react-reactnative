{"ast":null,"code":"var axios=require(\"axios\");var instanceAxios=axios.create({baseURL:\"http://localhost:8080/\"});function sleep(delay,value){return new Promise(function(resolve){setTimeout(resolve,delay,value);});}instanceAxios.interceptors.response.use(function(response){var data=response.data;if(data.code!==0){var error=new Error(data.message||\"Uknown error.\");error.data=data.data;throw error;}return sleep(100,data.data);},function(error){return Promise.reject(error);});export{instanceAxios};","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/utils/apiUtil.js"],"names":["axios","require","instanceAxios","create","baseURL","sleep","delay","value","Promise","resolve","setTimeout","interceptors","response","use","data","code","error","Error","message","reject"],"mappings":"AAAA,GAAMA,CAAAA,KAAK,CAAGC,OAAO,CAAC,OAAD,CAArB,CACA,GAAMC,CAAAA,aAAa,CAAGF,KAAK,CAACG,MAAN,CAAa,CACjCC,OAAO,CAAE,wBADwB,CAAb,CAAtB,CAIA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsBC,KAAtB,CAA6B,CAC3B,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAASC,OAAT,CAAkB,CACnCC,UAAU,CAACD,OAAD,CAAUH,KAAV,CAAiBC,KAAjB,CAAV,CACD,CAFM,CAAP,CAGD,CAEDL,aAAa,CAACS,YAAd,CAA2BC,QAA3B,CAAoCC,GAApC,CACE,SAASD,QAAT,CAAmB,IACTE,CAAAA,IADS,CACAF,QADA,CACTE,IADS,CAEjB,GAAIA,IAAI,CAACC,IAAL,GAAc,CAAlB,CAAqB,CACnB,GAAMC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,KAAJ,CAAUH,IAAI,CAACI,OAAL,EAAgB,eAA1B,CAAd,CACAF,KAAK,CAACF,IAAN,CAAaA,IAAI,CAACA,IAAlB,CACA,KAAME,CAAAA,KAAN,CACD,CACD,MAAOX,CAAAA,KAAK,CAAC,GAAD,CAAMS,IAAI,CAACA,IAAX,CAAZ,CACD,CATH,CAUE,SAASE,KAAT,CAAgB,CACd,MAAOR,CAAAA,OAAO,CAACW,MAAR,CAAeH,KAAf,CAAP,CACD,CAZH,EAeA,OAASd,aAAT","sourcesContent":["const axios = require(\"axios\");\nconst instanceAxios = axios.create({\n  baseURL: \"http://localhost:8080/\"\n});\n\nfunction sleep(delay, value) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, delay, value);\n  });\n}\n\ninstanceAxios.interceptors.response.use(\n  function(response) {\n    const { data } = response;\n    if (data.code !== 0) {\n      const error = new Error(data.message || \"Uknown error.\");\n      error.data = data.data;\n      throw error;\n    }\n    return sleep(100, data.data);\n  },\n  function(error) {\n    return Promise.reject(error);\n  }\n);\n\nexport { instanceAxios };\n"]},"metadata":{},"sourceType":"module"}