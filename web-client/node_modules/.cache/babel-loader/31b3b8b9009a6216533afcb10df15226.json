{"ast":null,"code":"import { FIND_UNIT_REQUEST, FIND_UNIT_SUCCESS, FIND_UNIT_FAILURE, FIND_UNITS_REQUEST, FIND_UNITS_SUCCESS, FIND_UNITS_FAILURE, DELETE_UNIT_REQUEST, DELETE_UNIT_SUCCESS, DELETE_UNIT_FAILURE, SAVE_UNIT_FAILURE, SAVE_UNIT_REQUEST, SAVE_UNIT_SUCCESS } from \"./constants\";\nimport { instanceAxios } from \"../utils/apiUtil\";\n\nfunction sleep(delay, value) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay, value);\n  });\n}\n\nexport const deletedById = id => dispatch => {\n  dispatch({\n    type: DELETE_UNIT_REQUEST\n  });\n  instanceAxios.delete(`units/${id}`).then(data => sleep(500, data)).then(data => data).then(data => {\n    dispatch(deletedSuccess(data));\n  }).catch(error => {\n    dispatch(deletedUnitFailure(error));\n  });\n};\nexport const saveUnit = ({\n  id,\n  name,\n  description\n}) => dispatch => {\n  dispatch({\n    type: SAVE_UNIT_REQUEST\n  });\n  const request = id ? instanceAxios.put(`units/${id}`, {\n    id,\n    name,\n    description\n  }) : instanceAxios.post(`units`, {\n    name,\n    description\n  });\n  request.then(data => sleep(500, data)).then(data => data).then(data => {\n    dispatch(saveSuccess(data));\n  }).catch(error => {\n    dispatch(saveFailure(error));\n  });\n};\nexport const findById = id => dispatch => {\n  dispatch({\n    type: FIND_UNIT_REQUEST\n  });\n  instanceAxios.get(`units/${id}`).then(data => sleep(500, data)).then(data => data).then(data => {\n    dispatch(findByIdSucces(data));\n  }).catch(error => {\n    dispatch(findByIdFailure(error));\n  });\n};\nexport const findAll = ({\n  search,\n  sort = \"asc\",\n  page = 0,\n  size = 10\n} = {}) => dispatch => {\n  dispatch({\n    type: FIND_UNITS_REQUEST\n  });\n  instanceAxios.get(`units`, {\n    params: { ...search,\n      sort,\n      page,\n      size\n    }\n  }).then(data => sleep(2000, data)).then(data => data).then(data => {\n    dispatch(findAllSucces(data));\n  }).catch(error => {\n    dispatch(findAllFailure(error));\n  });\n};\n\nfunction findByIdSucces(data) {\n  return {\n    type: FIND_UNIT_SUCCESS,\n    data: data\n  };\n}\n\nfunction findByIdFailure(error) {\n  return {\n    type: FIND_UNIT_FAILURE,\n    error: error\n  };\n}\n\nfunction findAllSucces(data) {\n  return {\n    type: FIND_UNITS_SUCCESS,\n    data: data\n  };\n}\n\nfunction findAllFailure(error) {\n  return {\n    type: FIND_UNITS_FAILURE,\n    error: error\n  };\n}\n\nfunction deletedSuccess(data) {\n  return {\n    type: DELETE_UNIT_SUCCESS,\n    data: data\n  };\n}\n\nfunction deletedUnitFailure(error) {\n  return {\n    type: DELETE_UNIT_FAILURE,\n    error: error\n  };\n}\n\nfunction saveFailure(error) {\n  return {\n    type: SAVE_UNIT_FAILURE,\n    error: error\n  };\n}\n\nfunction saveSuccess(data) {\n  return {\n    type: SAVE_UNIT_SUCCESS,\n    data: data\n  };\n}","map":{"version":3,"sources":["/home/aditya/Documents/github/bootcamp/ReactJS/web-client/src/action/units.js"],"names":["FIND_UNIT_REQUEST","FIND_UNIT_SUCCESS","FIND_UNIT_FAILURE","FIND_UNITS_REQUEST","FIND_UNITS_SUCCESS","FIND_UNITS_FAILURE","DELETE_UNIT_REQUEST","DELETE_UNIT_SUCCESS","DELETE_UNIT_FAILURE","SAVE_UNIT_FAILURE","SAVE_UNIT_REQUEST","SAVE_UNIT_SUCCESS","instanceAxios","sleep","delay","value","Promise","resolve","setTimeout","deletedById","id","dispatch","type","delete","then","data","deletedSuccess","catch","error","deletedUnitFailure","saveUnit","name","description","request","put","post","saveSuccess","saveFailure","findById","get","findByIdSucces","findByIdFailure","findAll","search","sort","page","size","params","findAllSucces","findAllFailure"],"mappings":"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","sourcesContent":["import {\n  FIND_UNIT_REQUEST,\n  FIND_UNIT_SUCCESS,\n  FIND_UNIT_FAILURE,\n  FIND_UNITS_REQUEST,\n  FIND_UNITS_SUCCESS,\n  FIND_UNITS_FAILURE,\n  DELETE_UNIT_REQUEST,\n  DELETE_UNIT_SUCCESS,\n  DELETE_UNIT_FAILURE,\n  SAVE_UNIT_FAILURE,\n  SAVE_UNIT_REQUEST,\n  SAVE_UNIT_SUCCESS\n} from \"./constants\";\nimport { instanceAxios } from \"../utils/apiUtil\";\n\nfunction sleep(delay, value) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, delay, value);\n  });\n}\n\nexport const deletedById = id => dispatch => {\n  dispatch({ type: DELETE_UNIT_REQUEST });\n  instanceAxios\n    .delete(`units/${id}`)\n    .then(data => sleep(500, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(deletedSuccess(data));\n    })\n    .catch(error => {\n      dispatch(deletedUnitFailure(error));\n    });\n};\n\nexport const saveUnit = ({ id, name, description }) => dispatch => {\n  dispatch({ type: SAVE_UNIT_REQUEST });\n\n  const request = id\n    ? instanceAxios.put(`units/${id}`, { id, name, description })\n    : instanceAxios.post(`units`, { name, description });\n  request\n    .then(data => sleep(500, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(saveSuccess(data));\n    })\n    .catch(error => {\n      dispatch(saveFailure(error));\n    });\n};\n\nexport const findById = id => dispatch => {\n  dispatch({ type: FIND_UNIT_REQUEST });\n  instanceAxios\n    .get(`units/${id}`)\n    .then(data => sleep(500, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(findByIdSucces(data));\n    })\n    .catch(error => {\n      dispatch(findByIdFailure(error));\n    });\n};\n\nexport const findAll = ({\n  search,\n  sort = \"asc\",\n  page = 0,\n  size = 10\n} = {}) => dispatch => {\n  dispatch({ type: FIND_UNITS_REQUEST });\n  instanceAxios\n    .get(`units`, {\n      params: { ...search, sort, page, size }\n    })\n    .then(data => sleep(2000, data))\n    .then(data => data)\n    .then(data => {\n      dispatch(findAllSucces(data));\n    })\n    .catch(error => {\n      dispatch(findAllFailure(error));\n    });\n};\n\nfunction findByIdSucces(data) {\n  return {\n    type: FIND_UNIT_SUCCESS,\n    data: data\n  };\n}\n\nfunction findByIdFailure(error) {\n  return {\n    type: FIND_UNIT_FAILURE,\n    error: error\n  };\n}\nfunction findAllSucces(data) {\n  return {\n    type: FIND_UNITS_SUCCESS,\n    data: data\n  };\n}\n\nfunction findAllFailure(error) {\n  return {\n    type: FIND_UNITS_FAILURE,\n    error: error\n  };\n}\n\nfunction deletedSuccess(data) {\n  return {\n    type: DELETE_UNIT_SUCCESS,\n    data: data\n  };\n}\n\nfunction deletedUnitFailure(error) {\n  return {\n    type: DELETE_UNIT_FAILURE,\n    error: error\n  };\n}\n\nfunction saveFailure(error) {\n  return {\n    type: SAVE_UNIT_FAILURE,\n    error: error\n  };\n}\n\nfunction saveSuccess(data) {\n  return {\n    type: SAVE_UNIT_SUCCESS,\n    data: data\n  };\n}\n"]},"metadata":{},"sourceType":"module"}